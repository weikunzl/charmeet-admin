describe("timepicker directive",function(){function e(e,t,i){i=i?i:0;var a=new Date;return a.setHours(e),a.setMinutes(t),a.setSeconds(i),a.setMilliseconds(0),a}function t(e,t){for(var i=q.find("input"),a=t?2:3,o=[],n=0;a>n;n++)o.push(i.eq(n).val());return e!==!0&&o.push(u().text()),o}function i(e){return e?[d.time.getHours(),d.time.getMinutes()]:[d.time.getHours(),d.time.getMinutes(),d.time.getSeconds()]}function a(e,t){return q.find("tr").eq(e?0:2).find("td").eq(t).find("a").eq(0)}function o(e){return a(e,0)}function n(e){return a(e,2)}function c(e){return a(e,4)}function u(){return q.find("button").eq(0)}function l(e,t){for(var i=0,a=t||1;a>i;i++)e.click(),d.$digest()}function r(e){var t=$.Event("mousewheel");return t.wheelDelta=e,t}function s(e){var t=$.Event("wheel");return t.deltaY=e,t}function p(e){var t=$.Event("keydown");switch(e){case"left":t.which=37;break;case"up":t.which=38;break;case"right":t.which=39;break;case"down":t.which=40}return t}var d,x,g,q,E;beforeEach(module("ui.bootstrap.timepicker")),beforeEach(module("uib/template/timepicker/timepicker.html")),beforeEach(inject(function(t,i,a){x=t,d=i,d.time=e(14,40,25),g=a,q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest(),E=q.controller("ngModel")})),it("contains three row & four input elements",function(){expect(q.find("tr").length).toBe(3),expect(q.find("input").length).toBe(3),expect(q.find("button").length).toBe(1)}),it("has initially the correct time & meridian",function(){expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])}),it("should be pristine",function(){expect(E.$pristine).toBe(!0)}),it("should be untouched",function(){expect(E.$untouched).toBe(!0)}),it("has `selected` current time when model is initially cleared",function(){d.time=null,q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest(),expect(d.time).toBe(null),expect(t()).not.toEqual(["","","",""])}),it("changes inputs when model changes value",function(){d.time=e(11,50,20),d.$digest(),expect(t()).toEqual(["11","50","20","AM"]),expect(i()).toEqual([11,50,20]),d.time=e(16,40,45),d.$digest(),expect(t()).toEqual(["04","40","45","PM"]),expect(i()).toEqual([16,40,45])}),it("increases / decreases hours when arrows are clicked",function(){var e=o(!0),a=o(!1);l(e),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),l(a),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),l(a),expect(t()).toEqual(["01","40","25","PM"]),expect(i()).toEqual([13,40,25])}),it("increase / decreases minutes by default step when arrows are clicked",function(){var e=n(!0),a=n(!1);l(e),expect(t()).toEqual(["02","41","25","PM"]),expect(i()).toEqual([14,41,25]),l(a),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),l(a),expect(t()).toEqual(["02","39","25","PM"]),expect(i()).toEqual([14,39,25])}),it("increase / decreases seconds by default step when arrows are clicked",function(){var e=c(!0),a=c(!1);l(e),expect(t()).toEqual(["02","40","26","PM"]),expect(i()).toEqual([14,40,26]),l(a),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),l(a),expect(t()).toEqual(["02","40","24","PM"]),expect(i()).toEqual([14,40,24])}),it("should be dirty when input changes",function(){var e=o(!0),t=n(!0),i=c(!0);l(e),expect(E.$dirty).toBe(!0),E.$setPristine(),l(t),expect(E.$dirty).toBe(!0),E.$setPristine(),l(i),expect(E.$dirty).toBe(!0)}),it("should be touched when input blurs",function(){var e=q.find("input"),t=e.eq(0),i=e.eq(1),a=e.eq(2);t.val(12),d.$digest(),t.blur(),expect(E.$touched).toBe(!0),E.$setUntouched(),i.val(20),d.$digest(),t.blur(),expect(E.$touched).toBe(!0),E.$setUntouched(),a.val(9),d.$digest(),t.blur(),expect(E.$touched).toBe(!0)}),it("meridian button has correct type",function(){var e=u();expect(e.attr("type")).toBe("button")}),it("toggles meridian when button is clicked",function(){var e=u();l(e),expect(t()).toEqual(["02","40","25","AM"]),expect(i()).toEqual([2,40,25]),l(e),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),l(e),expect(t()).toEqual(["02","40","25","AM"]),expect(i()).toEqual([2,40,25])}),it('has minutes "connected" to hours',function(){var e=n(!0),a=n(!1);l(e,10),expect(t()).toEqual(["02","50","25","PM"]),expect(i()).toEqual([14,50,25]),l(e,10),expect(t()).toEqual(["03","00","25","PM"]),expect(i()).toEqual([15,0,25]),l(e,10),d.$digest(),expect(t()).toEqual(["03","10","25","PM"]),expect(i()).toEqual([15,10,25]),l(a,10),d.$digest(),expect(t()).toEqual(["03","00","25","PM"]),expect(i()).toEqual([15,0,25]),l(a,10),d.$digest(),expect(t()).toEqual(["02","50","25","PM"]),expect(i()).toEqual([14,50,25])}),it('has seconds "connected" to minutes',function(){var e=c(!0),a=c(!1);l(e,15),expect(t()).toEqual(["02","40","40","PM"]),expect(i()).toEqual([14,40,40]),l(e,15),expect(t()).toEqual(["02","40","55","PM"]),expect(i()).toEqual([14,40,55]),l(e,15),d.$digest(),expect(t()).toEqual(["02","41","10","PM"]),expect(i()).toEqual([14,41,10]),l(a,15),d.$digest(),expect(t()).toEqual(["02","40","55","PM"]),expect(i()).toEqual([14,40,55]),l(a,15),d.$digest(),expect(t()).toEqual(["02","40","40","PM"]),expect(i()).toEqual([14,40,40])}),it('has hours "connected" to meridian',function(){var a=o(!0),n=o(!1);d.time=e(11,0,25),d.$digest(),expect(t()).toEqual(["11","00","25","AM"]),expect(i()).toEqual([11,0,25]),l(a),expect(t()).toEqual(["12","00","25","PM"]),expect(i()).toEqual([12,0,25]),l(a),expect(t()).toEqual(["01","00","25","PM"]),expect(i()).toEqual([13,0,25]),l(n),expect(t()).toEqual(["12","00","25","PM"]),expect(i()).toEqual([12,0,25]),l(n),expect(t()).toEqual(["11","00","25","AM"]),expect(i()).toEqual([11,0,25]),d.time=e(23,0,25),d.$digest(),expect(t()).toEqual(["11","00","25","PM"]),expect(i()).toEqual([23,0,25]),l(a),expect(t()).toEqual(["12","00","25","AM"]),expect(i()).toEqual([0,0,25]),l(a),expect(t()).toEqual(["01","00","25","AM"]),expect(i()).toEqual([1,0,25]),l(n),expect(t()).toEqual(["12","00","25","AM"]),expect(i()).toEqual([0,0,25]),l(n),expect(t()).toEqual(["11","00","25","PM"]),expect(i()).toEqual([23,0,25])}),it("changes only the time part when hours change",function(){d.time=e(23,50,20),d.$digest();var a=d.time.getDate(),n=o(!0);l(n),expect(t()).toEqual(["12","50","20","AM"]),expect(i()).toEqual([0,50,20]),expect(a).toEqual(d.time.getDate())}),it("changes only the time part when minutes change",function(){q=x('<uib-timepicker ng-model="time" minute-step="15"></uib-timepicker>')(d),d.time=e(0,0,0),d.$digest();var a=d.time.getDate(),o=n(!0);l(o,2),expect(t()).toEqual(["12","30","00","AM"]),expect(i()).toEqual([0,30,0]),expect(a).toEqual(d.time.getDate());var c=n(!1);l(c,2),expect(t()).toEqual(["12","00","00","AM"]),expect(i()).toEqual([0,0,0]),expect(a).toEqual(d.time.getDate()),l(c,2),expect(t()).toEqual(["11","30","00","PM"]),expect(i()).toEqual([23,30,0]),expect(a).toEqual(d.time.getDate())}),it('responds properly on "mousewheel" events',function(){var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=r(1),u=r(-1);expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","27","PM"]),expect(i()).toEqual([16,42,27]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])}),it('responds properly on "wheel" events',function(){var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=s(-1),u=s(1);expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","27","PM"]),expect(i()).toEqual([16,42,27]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])}),it('responds properly on "keydown" events',function(){var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=p("up"),u=p("down"),l=p("left");expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(c),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","42","27","PM"]),expect(i()).toEqual([16,42,27]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","26","PM"]),expect(i()).toEqual([16,42,26]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","42","25","PM"]),expect(i()).toEqual([16,42,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","41","25","PM"]),expect(i()).toEqual([16,41,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","40","25","PM"]),expect(i()).toEqual([16,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["03","40","25","PM"]),expect(i()).toEqual([15,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])}),describe("attributes",function(){beforeEach(function(){d.hstep=2,d.mstep=30,d.sstep=30,d.time=e(14,0,0),q=x('<uib-timepicker ng-model="time" hour-step="hstep" minute-step="mstep" second-step="sstep"></uib-timepicker>')(d),d.$digest()}),it("increases / decreases hours by configurable step",function(){var e=o(!0),a=o(!1);expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),l(e),expect(t()).toEqual(["04","00","00","PM"]),expect(i()).toEqual([16,0,0]),l(a),expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),l(a),expect(t()).toEqual(["12","00","00","PM"]),expect(i()).toEqual([12,0,0]),d.hstep=3,d.$digest(),l(e),expect(t()).toEqual(["03","00","00","PM"]),expect(i()).toEqual([15,0,0]),l(a),expect(t()).toEqual(["12","00","00","PM"]),expect(i()).toEqual([12,0,0])}),it("increases / decreases minutes by configurable step",function(){var e=n(!0),a=n(!1);l(e),expect(t()).toEqual(["02","30","00","PM"]),expect(i()).toEqual([14,30,0]),l(e),expect(t()).toEqual(["03","00","00","PM"]),expect(i()).toEqual([15,0,0]),l(a),expect(t()).toEqual(["02","30","00","PM"]),expect(i()).toEqual([14,30,0]),l(a),expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),d.mstep=15,d.$digest(),l(e),expect(t()).toEqual(["02","15","00","PM"]),expect(i()).toEqual([14,15,0]),l(a),expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),l(a),expect(t()).toEqual(["01","45","00","PM"]),expect(i()).toEqual([13,45,0])}),it('responds properly on "mousewheel" events with configurable steps',function(){var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=r(1),u=r(-1);expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),a.trigger(c),d.$digest(),expect(t()).toEqual(["04","00","00","PM"]),expect(i()).toEqual([16,0,0]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","30","00","PM"]),expect(i()).toEqual([16,30,0]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","30","30","PM"]),expect(i()).toEqual([16,30,30]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","30","00","PM"]),expect(i()).toEqual([16,30,0]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","00","00","PM"]),expect(i()).toEqual([16,0,0]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0])}),it('responds properly on "wheel" events with configurable steps',function(){var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=s(-1),u=s(1);expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),a.trigger(c),d.$digest(),expect(t()).toEqual(["04","00","00","PM"]),expect(i()).toEqual([16,0,0]),o.trigger(c),d.$digest(),expect(t()).toEqual(["04","30","00","PM"]),expect(i()).toEqual([16,30,0]),n.trigger(c),d.$digest(),expect(t()).toEqual(["04","30","30","PM"]),expect(i()).toEqual([16,30,30]),n.trigger(u),d.$digest(),expect(t()).toEqual(["04","30","00","PM"]),expect(i()).toEqual([16,30,0]),o.trigger(u),d.$digest(),expect(t()).toEqual(["04","00","00","PM"]),expect(i()).toEqual([16,0,0]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0])}),it("can handle strings as steps",function(){var e=o(!0),a=n(!0),u=c(!0);expect(t()).toEqual(["02","00","00","PM"]),expect(i()).toEqual([14,0,0]),d.hstep="4",d.mstep="20",d.sstep="20",d.$digest(),l(e),expect(t()).toEqual(["06","00","00","PM"]),expect(i()).toEqual([18,0,0]),l(a),expect(t()).toEqual(["06","20","00","PM"]),expect(i()).toEqual([18,20,0]),l(u),expect(t()).toEqual(["06","20","20","PM"]),expect(i()).toEqual([18,20,20])})}),describe("without seconds mode",function(){beforeEach(function(){d.displaysSeconds=!1,d.time=e(14,40,35),q=x('<uib-timepicker ng-model="time" show-seconds="displaysSeconds"></uib-timepicker>')(d),d.$digest()}),it("increases / decreases hours when arrows are clicked",function(){var e=o(!0),a=o(!1);l(e),expect(t(!1,!0)).toEqual(["03","40","PM"]),expect(i(!0)).toEqual([15,40]),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),l(a),expect(t(!1,!0)).toEqual(["01","40","PM"]),expect(i(!0)).toEqual([13,40])}),it("increase / decreases minutes by default step when arrows are clicked",function(){var e=n(!0),a=n(!1);l(e),expect(t(!1,!0)).toEqual(["02","41","PM"]),expect(i(!0)).toEqual([14,41]),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),l(a),expect(t(!1,!0)).toEqual(["02","39","PM"]),expect(i(!0)).toEqual([14,39])}),it('has minutes "connected" to hours',function(){var e=n(!0),a=n(!1);l(e,10),expect(t(!1,!0)).toEqual(["02","50","PM"]),expect(i(!0)).toEqual([14,50]),l(e,10),expect(t(!1,!0)).toEqual(["03","00","PM"]),expect(i(!0)).toEqual([15,0]),l(e,10),d.$digest(),expect(t(!1,!0)).toEqual(["03","10","PM"]),expect(i(!0)).toEqual([15,10]),l(a,10),d.$digest(),expect(t(!1,!0)).toEqual(["03","00","PM"]),expect(i(!0)).toEqual([15,0]),l(a,10),d.$digest(),expect(t(!1,!0)).toEqual(["02","50","PM"]),expect(i(!0)).toEqual([14,50])})}),describe("12 / 24 hour mode",function(){function a(){return q.find("tr").eq(1).find("td").eq(5)}beforeEach(function(){d.meridian=!1,d.time=e(14,10,20),q=x('<uib-timepicker ng-model="time" show-meridian="meridian"></uib-timepicker>')(d),d.$digest()}),it("initially displays correct time when `show-meridian` is false",function(){expect(t(!0)).toEqual(["14","10","20"]),expect(i()).toEqual([14,10,20]),expect(a()).toBeHidden()}),it("toggles correctly between different modes",function(){expect(t(!0)).toEqual(["14","10","20"]),d.meridian=!0,d.$digest(),expect(t()).toEqual(["02","10","20","PM"]),expect(i()).toEqual([14,10,20]),expect(a()).not.toBeHidden(),d.meridian=!1,d.$digest(),expect(t(!0)).toEqual(["14","10","20"]),expect(i()).toEqual([14,10,20]),expect(a()).toBeHidden()}),it("handles correctly initially empty model on parent element",function(){d.time=null,q=x('<span ng-model="time"><uib-timepicker show-meridian="meridian"></uib-timepicker></span>')(d),d.$digest(),expect(d.time).toBe(null)})}),describe("`meridians` attribute",function(){beforeEach(inject(function(){d.meridiansArray=["am","pm"],q=x('<uib-timepicker ng-model="time" meridians="meridiansArray"></uib-timepicker>')(d),d.$digest()})),it("displays correctly",function(){expect(t()[3]).toBe("pm")}),it("toggles correctly",function(){d.time=e(2,40,20),d.$digest(),expect(t()[3]).toBe("am")})}),describe("`readonly-input` attribute",function(){beforeEach(inject(function(){d.meridiansArray=["am","pm"],q=x('<uib-timepicker ng-model="time" readonly-input="true"></uib-timepicker>')(d),d.$digest()})),it("should make inputs readonly",function(){var e=q.find("input");expect(e.eq(0).attr("readonly")).toBe("readonly"),expect(e.eq(1).attr("readonly")).toBe("readonly"),expect(e.eq(2).attr("readonly")).toBe("readonly")})}),describe("`pad-hours` attribute",function(){function e(e,t){e.val(t),e.trigger("input")}it("should pad the hours by default",function(){q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest();var t=q.find("input"),i=t.eq(0);e(i,4),i.blur(),expect(i.val()).toBe("04")}),it("should not pad the hours",function(){q=x('<uib-timepicker ng-model="time" pad-hours="false"></uib-timepicker>')(d),d.$digest();var t=q.find("input"),i=t.eq(0);e(i,4),i.blur(),expect(i.val()).toBe("4")})}),describe("setting uibTimepickerConfig steps",function(){var e={};beforeEach(inject(function(t,i,a){angular.extend(e,a),a.hourStep=2,a.minuteStep=10,a.secondStep=10,a.showMeridian=!1,q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest()})),afterEach(inject(function(t){angular.extend(t,e)})),it("does not affect the initial value",function(){expect(t(!0)).toEqual(["14","40","25"]),expect(i()).toEqual([14,40,25])}),it("increases / decreases hours with configured step",function(){var e=o(!0),a=o(!1);l(e,2),expect(t(!0)).toEqual(["18","40","25"]),expect(i()).toEqual([18,40,25]),l(a,3),expect(t(!0)).toEqual(["12","40","25"]),expect(i()).toEqual([12,40,25])}),it("increases / decreases minutes with configured step",function(){var e=n(!0),a=n(!1);l(e),expect(t(!0)).toEqual(["14","50","25"]),expect(i()).toEqual([14,50,25]),l(a,3),expect(t(!0)).toEqual(["14","20","25"]),expect(i()).toEqual([14,20,25])}),it("increases / decreases seconds with configured step",function(){var e=c(!0),a=c(!1);l(e),expect(t(!0)).toEqual(["14","40","35"]),expect(i()).toEqual([14,40,35]),l(a,3),expect(t(!0)).toEqual(["14","40","05"]),expect(i()).toEqual([14,40,5])})}),describe("setting uibTimepickerConfig meridian labels",function(){var a={};beforeEach(inject(function(e,t,i){angular.extend(a,i),i.meridians=["π.μ.","μ.μ."],i.showMeridian=!0,q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest()})),afterEach(inject(function(e){angular.extend(e,a)})),it("displays correctly",function(){expect(t()).toEqual(["02","40","25","μ.μ."]),expect(i()).toEqual([14,40,25])}),it("toggles correctly",function(){d.time=e(2,40,20),d.$digest(),expect(t()).toEqual(["02","40","20","π.μ."]),expect(i()).toEqual([2,40,20])})}),describe("setting uibTimepickerConfig template url",function(){var e={},t="foo/bar.html";beforeEach(inject(function(i,a,o){angular.extend(e,o),g.put(t,"<div>baz</div>"),o.templateUrl=t,q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest()})),afterEach(inject(function(t){angular.extend(t,e)})),it("should use a custom template",function(){expect(q[0].tagName.toLowerCase()).toBe("div"),expect(q.html()).toBe("baz")})}),describe("$formatter",function(){var e,t;beforeEach(function(){e=q.controller("ngModel"),t=new Date("Mon Mar 23 2015 14:40:11 GMT-0700 (PDT)")}),it("should have one formatter",function(){expect(e.$formatters.length).toBe(1)}),it("should convert a date to a new reference representing the same date",function(){expect(e.$formatters[0](t)).toEqual(t)}),it("should convert a valid date string to a date object",function(){expect(e.$formatters[0]("Mon Mar 23 2015 14:40:11 GMT-0700 (PDT)")).toEqual(t)}),it("should set falsy values as null",function(){expect(e.$formatters[0](void 0)).toBe(null),expect(e.$formatters[0](null)).toBe(null),expect(e.$formatters[0]("")).toBe(null),expect(e.$formatters[0](0)).toBe(null),expect(e.$formatters[0](NaN)).toBe(null)})}),describe("user input validation",function(){function a(){return q.find("input").eq(0)}function o(){return q.find("input").eq(1)}function n(){return q.find("input").eq(2)}var c;beforeEach(inject(function(e){c=function(t,i){t.val(i),t.trigger(e.hasEvent("input")?"input":"change"),d.$digest()}})),it("has initially the correct time & meridian",function(){expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])}),it("updates hours & pads on input change & pads on blur",function(){var e=a();c(e,5),expect(t()).toEqual(["5","40","25","PM"]),expect(i()).toEqual([17,40,25]),e.blur(),expect(t()).toEqual(["05","40","25","PM"]),expect(i()).toEqual([17,40,25])}),it("updates minutes & pads on input change & pads on blur",function(){var e=o();c(e,9),expect(t()).toEqual(["02","9","25","PM"]),expect(i()).toEqual([14,9,25]),e.blur(),expect(t()).toEqual(["02","09","25","PM"]),expect(i()).toEqual([14,9,25])}),it("updates seconds & pads on input change & pads on blur",function(){var e=n();c(e,4),expect(t()).toEqual(["02","40","4","PM"]),expect(i()).toEqual([14,40,4]),e.blur(),expect(t()).toEqual(["02","40","04","PM"]),expect(i()).toEqual([14,40,4])}),it("clears model when input hours is invalid & alerts the UI",function(){var e=a();c(e,"pizza"),expect(d.time).toBe(null),expect(e.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0),c(e,8),e.blur(),d.$digest(),expect(t()).toEqual(["08","40","25","PM"]),expect(i()).toEqual([20,40,25]),expect(e.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("clears model when input minutes is invalid & alerts the UI",function(){var e=o();c(e,"8a"),expect(d.time).toBe(null),expect(e.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0),c(e,22),expect(t()).toEqual(["02","22","25","PM"]),expect(i()).toEqual([14,22,25]),expect(e.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("clears model when input seconds is invalid & alerts the UI",function(){var e=n();c(e,"pizza"),expect(d.time).toBe(null),expect(e.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0),c(e,13),expect(t()).toEqual(["02","40","13","PM"]),expect(i()).toEqual([14,40,13]),expect(e.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should not be invalid when the model is cleared",function(){var t=a(),u=o(),l=n();d.time=e(10,20,30),d.$digest(),expect(i()).toEqual([10,20,30]),c(t,""),t.blur(),d.$digest(),c(u,""),u.blur(),d.$digest(),c(l,""),l.blur(),d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("timepicker1 leaves view alone when hours are invalid and minutes are updated",function(){var e=a(),i=o();c(e,"25"),e.blur(),d.$digest(),expect(t()).toEqual(["25","40","25","PM"]),c(i,"2"),i.blur(),d.$digest(),expect(t()).toEqual(["25","2","25","PM"])}),it("leaves view alone when minutes are invalid and hours are updated",function(){var e=a(),i=o();c(i,"61"),i.blur(),d.$digest(),expect(d.time).toBe(null),expect(t()).toEqual(["02","61","25","PM"]),c(e,"2"),e.blur(),d.$digest(),expect(d.time).toBe(null),expect(t()).toEqual(["2","61","25","PM"])}),it("handles 12/24H mode change",function(){d.meridian=!0,q=x('<uib-timepicker ng-model="time" show-meridian="meridian"></uib-timepicker>')(d),d.$digest();var e=a();c(e,"16"),expect(d.time).toBe(null),expect(e.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0),d.meridian=!1,d.$digest(),expect(t(!0)).toEqual(["16","40","25"]),expect(i()).toEqual([16,40,25]),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should have a default tabindex of 0",function(){q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest(),expect(q.isolateScope().tabindex).toBe(0)}),it("should have the correct tabindex",function(){q=x('<uib-timepicker ng-model="time" tabindex="5"></uib-timepicker>')(d),d.$digest(),expect(q.attr("tabindex")).toBe(void 0),expect(q.isolateScope().tabindex).toBe("5")})}),describe("when model is not a Date",function(){beforeEach(inject(function(){q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d)})),it("should not be invalid when the model is null",function(){d.time=null,d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should not be invalid when the model is undefined",function(){d.time=void 0,d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should not be invalid when the model is a valid string date representation",function(){d.time="September 30, 2010 15:30:10",d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1),expect(t()).toEqual(["03","30","10","PM"])}),it("should be invalid when the model is not a valid string date representation",function(){d.time="pizza",d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the model becomes valid",function(){d.time="pizza",d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!0),d.time=new Date,d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should return valid when the model is cleared",function(){d.time="pizza",d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!0),d.time=null,d.$digest(),expect(q.hasClass("ng-invalid-time")).toBe(!1)})}),describe("use with `ng-required` directive",function(){beforeEach(inject(function(){d.time=null,q=x('<uib-timepicker ng-model="time" ng-required="true"></uib-timepicker>')(d),d.$digest()})),it("should be invalid initially",function(){expect(q.hasClass("ng-invalid")).toBe(!0)}),it("should be valid if model has been specified",function(){d.time=new Date,d.$digest(),expect(q.hasClass("ng-invalid")).toBe(!1)})}),describe("use with `ng-change` directive",function(){beforeEach(inject(function(){d.changeHandler=jasmine.createSpy("changeHandler"),d.time=new Date,q=x('<uib-timepicker ng-model="time" ng-change="changeHandler()"></uib-timepicker>')(d),d.$digest()})),it("should not be called initially",function(){expect(d.changeHandler).not.toHaveBeenCalled()}),it("should be called when hours / minutes buttons clicked",function(){var e=o(!0),t=n(!1),i=c(!1);l(e,2),l(t,3),l(i,1),d.$digest(),expect(d.changeHandler.calls.count()).toBe(6)}),it("should not be called when model changes programatically",function(){d.time=new Date,d.$digest(),expect(d.changeHandler).not.toHaveBeenCalled()})}),describe("when used with min",function(){var a;beforeEach(inject(function(e){q=x('<uib-timepicker ng-model="time" min="min"></uib-timepicker>')(d),d.$digest(),a=function(t,i){t.val(i),t.trigger(e.hasEvent("input")?"input":"change"),d.$digest()}})),it("should not decrease hours when it would result in a time earlier than min",function(){var a=o(!1),n=q.find("input"),c=n.eq(0),u=r(-1),s=p("down");d.min=e(13,41),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should decrease hours when it would not result in a time earlier than min",function(){var a=o(!1),n=q.find("input"),c=n.eq(0),u=r(-1),s=p("down");d.min=e(0,0),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["01","40","PM"]),expect(i(!0)).toEqual([13,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["12","40","PM"]),expect(i(!0)).toEqual([12,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["11","40","AM"]),expect(i(!0)).toEqual([11,40])}),it("should not decrease minutes when it would result in a time ealier than min",function(){var a=n(!1),o=q.find("input"),c=o.eq(1),u=r(-1),s=p("down");d.min=e(14,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should decrease minutes when it would not result in a time ealier than min",function(){var a=n(!1),o=q.find("input"),c=o.eq(1),u=r(-1),s=p("down");d.min=e(0,0),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["02","39","PM"]),expect(i(!0)).toEqual([14,39]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","38","PM"]),expect(i(!0)).toEqual([14,38]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","37","PM"]),expect(i(!0)).toEqual([14,37])}),it("should not increase hours when time would rollover to a time earlier than min",function(){var a=o(!0),n=q.find("input"),c=n.eq(0),u=r(1),s=p("up");d.time=e(23,59),d.min=e(13,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59])}),it("should increase hours when time would rollover to a time not earlier than min",function(){var a=o(!0),n=q.find("input"),c=n.eq(0),u=r(1),s=p("up");d.min=e(0,0),d.time=e(23,59),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["12","59","AM"]),expect(i(!0)).toEqual([0,59]),d.time=e(23,59),d.$digest(),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["12","59","AM"]),expect(i(!0)).toEqual([0,59]),d.time=e(23,59),d.$digest(),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["12","59","AM"]),expect(i(!0)).toEqual([0,59])}),it("should not increase minutes when time would rollover to a time earlier than min",function(){var a=n(!0),o=q.find("input"),c=o.eq(1),u=r(1),s=p("up");d.time=e(23,59),d.min=e(13,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59])}),it("should increase minutes when time would rollover to a time not earlier than min",function(){var a=n(!0),o=q.find("input"),c=o.eq(1),u=r(1),s=p("up");d.min=e(0,0),d.time=e(23,59),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),
l(a),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),d.time=e(23,59),d.$digest(),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),d.time=e(23,59),d.$digest(),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0])}),it("should not change meridian when it would result a in time earlier than min",function(){var a=u();d.min=e(2,41),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should change meridian when it would not result in a time earlier than min",function(){var a=u();d.min=e(2,39),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["02","40","AM"]),expect(i(!0)).toEqual([2,40])}),it("should return invalid when the hours are changes such that the time is earlier than min",function(){var t=q.find("input"),i=t.eq(0);d.min=e(14,0),d.$digest(),a(i,1),expect(d.time).toBe(null),expect(i.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the hours are changes such that the time is not earlier than min",function(){var o=q.find("input"),n=o.eq(0);d.min=e(14,41),d.$digest(),a(n,3),expect(t(!1,!0)).toEqual(["3","40","PM"]),expect(i(!0)).toEqual([15,40]),expect(n.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should return invalid when the minutes are changes such that the time is earlier than min",function(){var t=q.find("input"),i=t.eq(1);d.min=e(14,30),d.$digest(),a(i,1),expect(d.time).toBe(null),expect(i.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the minutes are changes such that the time is not earlier than min",function(){var o=q.find("input"),n=o.eq(1);d.min=e(14,41),d.$digest(),a(n,42),expect(t(!1,!0)).toEqual(["02","42","PM"]),expect(i(!0)).toEqual([14,42]),expect(n.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)})}),describe("when used with max",function(){var a;beforeEach(inject(function(e){q=x('<uib-timepicker ng-model="time" max="max"></uib-timepicker>')(d),d.$digest(),a=function(t,i){t.val(i),t.trigger(e.hasEvent("input")?"input":"change"),d.$digest()}})),it("should not increase hours when it would result in a time later than max",function(){var a=o(!0),n=q.find("input"),c=n.eq(0),u=r(1),s=p("up");d.max=e(15,39),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should increase hours when it would not result in a time later than max",function(){var a=o(!0),n=q.find("input"),c=n.eq(0),u=r(1),s=p("up");d.max=e(23,59),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["03","40","PM"]),expect(i(!0)).toEqual([15,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["04","40","PM"]),expect(i(!0)).toEqual([16,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["05","40","PM"]),expect(i(!0)).toEqual([17,40])}),it("should not increase minutes when it would result in a time later than max",function(){var a=n(!0),o=q.find("input"),c=o.eq(1),u=r(1),s=p("up");d.max=e(14,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should increase minutes when it would not result in a time later than max",function(){var a=n(!0),o=q.find("input"),c=o.eq(1),u=r(1),s=p("up");d.max=e(23,59),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["02","41","PM"]),expect(i(!0)).toEqual([14,41]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["02","42","PM"]),expect(i(!0)).toEqual([14,42]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["02","43","PM"]),expect(i(!0)).toEqual([14,43])}),it("should not decrease hours when time would rollover to a time later than max",function(){var a=o(!1),n=q.find("input"),c=n.eq(0),u=r(-1),s=p("down");d.time=e(0,0),d.max=e(13,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0])}),it("should decrease hours when time would rollover to a time not later than max",function(){var a=o(!1),n=q.find("input"),c=n.eq(0),u=r(-1),s=p("down");d.max=e(23,59),d.time=e(0,0),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["11","00","PM"]),expect(i(!0)).toEqual([23,0]),d.time=e(0,0),d.$digest(),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["11","00","PM"]),expect(i(!0)).toEqual([23,0]),d.time=e(0,0),d.$digest(),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["11","00","PM"]),expect(i(!0)).toEqual([23,0])}),it("should not decrease minutes when time would rollover to a time later than max",function(){var a=n(!1),o=q.find("input"),c=o.eq(1),u=r(-1),s=p("down");d.time=e(0,0),d.max=e(13,40),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0]),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["12","00","AM"]),expect(i(!0)).toEqual([0,0])}),it("should decrease minutes when time would rollover to a time not later than max",function(){var a=n(!1),o=q.find("input"),c=o.eq(1),u=r(-1),s=p("down");d.max=e(23,59),d.time=e(0,0),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),d.time=e(0,0),d.$digest(),c.trigger(u),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59]),d.time=e(0,0),d.$digest(),c.trigger(s),d.$digest(),expect(t(!1,!0)).toEqual(["11","59","PM"]),expect(i(!0)).toEqual([23,59])}),it("should not change meridian when it would result a in time later than max",function(){var a=u();d.time=e(2,40),d.max=e(14,39),d.$digest(),expect(a.hasClass("disabled")).toBe(!0),l(a),expect(t(!1,!0)).toEqual(["02","40","AM"]),expect(i(!0)).toEqual([2,40])}),it("should change meridian when it would not result in a time later than max",function(){var a=u();d.time=e(2,40),d.max=e(14,41),d.$digest(),expect(a.hasClass("disabled")).toBe(!1),l(a),expect(t(!1,!0)).toEqual(["02","40","PM"]),expect(i(!0)).toEqual([14,40])}),it("should return invalid when the hours are changes such that the time is later than max",function(){var t=q.find("input"),i=t.eq(0);d.max=e(14,0),d.$digest(),a(i,3),expect(d.time).toBe(null),expect(i.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the hours are changes such that the time is not later than max",function(){var o=q.find("input"),n=o.eq(0);d.max=e(15,41),d.$digest(),a(n,3),expect(t(!1,!0)).toEqual(["3","40","PM"]),expect(i(!0)).toEqual([15,40]),expect(n.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)}),it("should return invalid when the minutes are changes such that the time is later than max",function(){var t=q.find("input"),i=t.eq(1);d.max=e(14,50),d.$digest(),a(i,51),expect(d.time).toBe(null),expect(i.parent().hasClass("has-error")).toBe(!0),expect(q.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the minutes are changes such that the time is not later than max",function(){var o=q.find("input"),n=o.eq(1);d.max=e(14,42),d.$digest(),a(n,41),expect(t(!1,!0)).toEqual(["02","41","PM"]),expect(i(!0)).toEqual([14,41]),expect(n.parent().hasClass("has-error")).toBe(!1),expect(q.hasClass("ng-invalid-time")).toBe(!1)})}),describe("custom template and controllerAs",function(){it("should allow custom templates",function(){g.put("foo/bar.html","<div>baz</div>"),q=x('<uib-timepicker ng-model="time" template-url="foo/bar.html"></uib-timepicker>')(d),d.$digest(),expect(q[0].tagName.toLowerCase()).toBe("div"),expect(q.html()).toBe("baz")}),it("should expose the controller on the view",function(){g.put("uib/template/timepicker/timepicker.html","<div><div>{{timepicker.text}}</div></div>"),q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(d),d.$digest();var e=q.controller("uibTimepicker");expect(e).toBeDefined(),e.text="foo",d.$digest(),expect(q.html()).toBe('<div class="ng-binding">foo</div>')})}),describe("ngDisabled",function(){it("prevents modifying date via controls when true",function(){d.disabled=!1,q=x('<uib-timepicker ng-model="time" ng-disabled="disabled"></uib-timepicker')(d),d.$digest();var e=q.find("input"),a=e.eq(0),o=e.eq(1),n=e.eq(2),c=p("up"),u=p("down"),l=p("left"),s=r(1),g=r(-1);expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),d.disabled=!0,d.$digest(),a.trigger(c),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(c),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(c),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(u),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(l),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(s),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(s),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(s),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),n.trigger(g),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),o.trigger(g),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25]),a.trigger(g),d.$digest(),expect(t()).toEqual(["02","40","25","PM"]),expect(i()).toEqual([14,40,25])})}),describe("gc",function(){var e;beforeEach(inject(function(){e=d.$new(),q=x('<uib-timepicker ng-model="time"></uib-timepicker>')(e),d.$digest()})),it("should clean up watchers",function(){expect(e.$$watchers.length>1).toBe(!0),q.isolateScope().$destroy(),expect(e.$$watchers.length).toBe(1)})})});