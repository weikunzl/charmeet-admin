describe("tooltip",function(){function e(e,t){e.trigger(t),e.scope().$$childTail.$digest()}var t,o,i,n,p,l;beforeEach(module("ui.bootstrap.tooltip")),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),beforeEach(inject(function(e,s,c){o=angular.element('<div><span uib-tooltip="tooltip text" tooltip-animation="false">Selector Text</span></div>'),l=c,i=e,s(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail})),afterEach(function(){l.off("keypress")}),it("should not be open initially",inject(function(){expect(p.isOpen).toBe(!1),expect(o.children().length).toBe(1)})),it("should open on mouseenter",inject(function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!0),expect(o.children().length).toBe(2)})),it("should close on mouseleave",inject(function(){e(t,"mouseenter"),e(t,"mouseleave"),expect(p.isOpen).toBe(!1)})),it("should not animate on animation set to false",inject(function(){expect(p.animation).toBe(!1)})),it('should have default placement of "top"',inject(function(){e(t,"mouseenter"),expect(p.placement).toBe("top")})),it("should allow specification of placement",inject(function(o){t=o(angular.element('<span uib-tooltip="tooltip text" tooltip-placement="bottom">Selector Text</span>'))(i),i.$apply(),n=t.scope(),p=n.$$childTail,e(t,"mouseenter"),expect(p.placement).toBe("bottom")})),it("should update placement dynamically",inject(function(o,l){i.place="bottom",t=o(angular.element('<span uib-tooltip="tooltip text" tooltip-placement="{{place}}">Selector Text</span>'))(i),i.$apply(),n=t.scope(),p=n.$$childTail,e(t,"mouseenter"),expect(p.placement).toBe("bottom"),i.place="right",i.$digest(),l.flush(),expect(p.placement).toBe("right")})),it("should work inside an ngRepeat",inject(function(o){t=o(angular.element('<ul><li ng-repeat="item in items"><span uib-tooltip="{{item.tooltip}}">{{item.name}}</span></li></ul>'))(i),i.items=[{name:"One",tooltip:"First Tooltip"}],i.$digest();var n=angular.element(t.find("li > span")[0]);e(n,"mouseenter"),expect(n.text()).toBe(i.items[0].name),p=n.scope().$$childTail,expect(p.content).toBe(i.items[0].tooltip),e(n,"mouseleave"),expect(p.isOpen).toBeFalsy()})),it("should show correct text when in an ngRepeat",inject(function(o,n){t=o(angular.element('<ul><li ng-repeat="item in items"><span uib-tooltip="{{item.tooltip}}">{{item.name}}</span></li></ul>'))(i),i.items=[{name:"One",tooltip:"First Tooltip"},{name:"Second",tooltip:"Second Tooltip"}],i.$digest();var l=angular.element(t.find("li > span")[0]),s=angular.element(t.find("li > span")[1]);e(l,"mouseenter"),e(l,"mouseleave"),n.flush(),e(s,"mouseenter"),expect(l.text()).toBe(i.items[0].name),expect(s.text()).toBe(i.items[1].name),p=s.scope().$$childTail,expect(p.content).toBe(i.items[1].tooltip),expect(t.find(".tooltip-inner").text()).toBe(i.items[1].tooltip),e(s,"mouseleave")})),it("should only have an isolate scope on the popup",inject(function(p){var l;i.tooltipMsg="Tooltip Text",i.alt="Alt Message",o=p(angular.element('<div><span alt={{alt}} uib-tooltip="{{tooltipMsg}}" tooltip-animation="false">Selector Text</span></div>'))(i),p(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),e(t,"mouseenter"),expect(t.attr("alt")).toBe(i.alt),l=angular.element(o.children()[1]).isolateScope(),expect(l.placement).toBe("top"),expect(l.content).toBe(i.tooltipMsg),e(t,"mouseleave"),e(t,"mouseenter"),l=angular.element(o.children()[1]).isolateScope(),expect(l.placement).toBe("top"),expect(l.content).toBe(i.tooltipMsg)})),it("should not show tooltips if there is nothing to show - issue #129",inject(function(e){o=e(angular.element('<div><span uib-tooltip="">Selector Text</span></div>'))(i),i.$digest(),o.find("span").trigger("mouseenter"),expect(o.children().length).toBe(1)})),it("should close the tooltip when its trigger element is destroyed",inject(function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!0),t.remove(),n.$destroy(),expect(o.children().length).toBe(0)})),it("issue 1191 - scope on the popup should always be child of correct element scope",function(){var i;e(t,"mouseenter"),i=angular.element(o.children()[1]).scope(),expect(i.$parent).toBe(p),e(t,"mouseleave"),e(t,"mouseenter"),i=angular.element(o.children()[1]).scope(),expect(i.$parent).toBe(p),e(t,"mouseleave")}),describe("with specified enable expression",function(){beforeEach(inject(function(e){i.enable=!1,o=e(angular.element('<div><span uib-tooltip="tooltip text" tooltip-enable="enable">Selector Text</span></div>'))(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail})),it("should not open ",inject(function(){e(t,"mouseenter"),expect(p.isOpen).toBeFalsy(),expect(o.children().length).toBe(1)})),it("should open",inject(function(){i.enable=!0,i.$digest(),e(t,"mouseenter"),expect(p.isOpen).toBeTruthy(),expect(o.children().length).toBe(2)}))}),describe("with specified popup delay",function(){var o;beforeEach(inject(function(e,l){o=l,i.delay="1000",t=e(angular.element('<span uib-tooltip="tooltip text" tooltip-popup-delay="{{delay}}" ng-disabled="disabled">Selector Text</span>'))(i),n=t.scope(),p=n.$$childTail,i.$digest()})),it("should open after timeout",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!1),o.flush(),expect(p.isOpen).toBe(!0)}),it("should not open if mouseleave before timeout",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!1),e(t,"mouseleave"),o.flush(),expect(p.isOpen).toBe(!1)}),it("should use default popup delay if specified delay is not a number",function(){i.delay="text1000",i.$digest(),e(t,"mouseenter"),expect(p.isOpen).toBe(!0)}),it("should not open if disabled is present",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!1),o.flush(500),expect(p.isOpen).toBe(!1),n.disabled=!0,n.$digest(),expect(p.isOpen).toBe(!1)}),it("should open when not disabled after being disabled - issue #4204",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!1),o.flush(500),n.disabled=!0,n.$digest(),o.flush(500),expect(p.isOpen).toBe(!1),n.disabled=!1,n.$digest(),e(t,"mouseenter"),o.flush(),expect(p.isOpen).toBe(!0)}),it("should close the tooltips in order",inject(function(n){var s=n('<div><span uib-tooltip="tooltip #2" tooltip-is-open="isOpen2">Selector Text</span></div>')(i);i.$digest(),s=s.find("span");var c=s.scope().$$childTail;c.isOpen=!1,i.$digest(),e(t,"mouseenter"),c.$digest(),o.flush(),expect(p.isOpen).toBe(!0),expect(c.isOpen).toBe(!1),e(s,"mouseenter"),c.$digest(),o.flush(),expect(p.isOpen).toBe(!0),expect(c.isOpen).toBe(!0);var a=$.Event("keypress");a.which=27,l.trigger(a),p.$digest(),c.$digest(),expect(p.isOpen).toBe(!0),expect(c.isOpen).toBe(!1);var u=$.Event("keypress");u.which=27,l.trigger(u),p.$digest(),c.$digest(),expect(p.isOpen).toBe(!1),expect(c.isOpen).toBe(!1)}))}),describe("with specified popup close delay",function(){var o;beforeEach(inject(function(e,l){o=l,i.delay="1000",t=e(angular.element('<span uib-tooltip="tooltip text" tooltip-popup-close-delay="{{delay}}" ng-disabled="disabled">Selector Text</span>'))(i),n=t.scope(),p=n.$$childTail,i.$digest()})),it("should close after timeout",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!0),e(t,"mouseleave"),o.flush(),expect(p.isOpen).toBe(!1)}),it("should use default popup close delay if specified delay is not a number and close immediately",function(){i.delay="text1000",i.$digest(),e(t,"mouseenter"),expect(p.popupCloseDelay).toBe(0),expect(p.isOpen).toBe(!0),e(t,"mouseleave"),o.flush(),expect(p.isOpen).toBe(!1)}),it("should open when not disabled after being disabled and close after delay - issue #4204",function(){e(t,"mouseenter"),expect(p.isOpen).toBe(!0),n.disabled=!0,n.$digest(),o.flush(500),expect(p.isOpen).toBe(!1),n.disabled=!1,n.$digest(),e(t,"mouseenter"),expect(p.isOpen).toBe(!0),e(t,"mouseleave"),o.flush(),expect(p.isOpen).toBe(!1)})}),describe("with specified popup and popup close delay",function(){var o;beforeEach(inject(function(e,l){o=l,i.delay="1000",t=e(angular.element('<span uib-tooltip="tooltip text" tooltip-popup-close-delay="{{delay}}" tooltip-popup-close-delay="{{delay}}" ng-disabled="disabled">Selector Text</span>'))(i),n=t.scope(),p=n.$$childTail,i.$digest()})),it("should not open if mouseleave before timeout",function(){e(t,"mouseenter"),o.flush(500),e(t,"mouseleave"),o.flush(),expect(p.isOpen).toBe(!1)})}),describe("with an is-open attribute",function(){beforeEach(inject(function(e){i.isOpen=!1,t=e(angular.element('<span uib-tooltip="tooltip text" tooltip-is-open="isOpen" >Selector Text</span>'))(i),n=t.scope(),p=n.$$childTail,i.$digest()})),it("should show and hide with the controller value",function(){expect(p.isOpen).toBe(!1),n.isOpen=!0,n.$digest(),expect(p.isOpen).toBe(!0),n.isOpen=!1,n.$digest(),expect(p.isOpen).toBe(!1)}),it("should update the controller value",function(){e(t,"mouseenter"),expect(n.isOpen).toBe(!0),e(t,"mouseleave"),expect(n.isOpen).toBe(!1)})}),describe("with an is-open attribute expression",function(){beforeEach(inject(function(e){i.isOpen=!1,t=e(angular.element('<span uib-tooltip="tooltip text" tooltip-is-open="isOpen === true" >Selector Text</span>'))(i),n=t.scope(),p=n.$$childTail,i.$digest()})),it("should show and hide with the expression",function(){expect(p.isOpen).toBe(!1),n.isOpen=!0,n.$digest(),expect(p.isOpen).toBe(!0),n.isOpen=!1,n.$digest(),expect(p.isOpen).toBe(!1)})}),describe("with a trigger attribute",function(){var t,o,i,n;beforeEach(inject(function(e){t=e})),it("should use it to show but set the hide trigger based on the map for mapped triggers",inject(function(l){o=angular.element('<div><input uib-tooltip="Hello!" tooltip-trigger="focus" /></div>'),l(o)(t),t.$apply(),i=o.find("input"),n=i.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(i,"focus"),expect(p.isOpen).toBeTruthy(),e(i,"blur"),expect(p.isOpen).toBeFalsy()})),it("should use it as both the show and hide triggers for unmapped triggers",inject(function(l){o=angular.element('<div><input uib-tooltip="Hello!" tooltip-trigger="fakeTriggerAttr" /></div>'),l(o)(t),t.$apply(),i=o.find("input"),n=i.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(i,"fakeTriggerAttr"),expect(p.isOpen).toBeTruthy(),e(i,"fakeTriggerAttr"),expect(p.isOpen).toBeFalsy()})),it("should only set up triggers once",inject(function(i){t.test=!0,o=angular.element("<div><input uib-tooltip=\"Hello!\" tooltip-trigger=\"{{ (test && 'mouseenter' || 'click') }}\" /><input uib-tooltip=\"Hello!\" tooltip-trigger=\"{{ (test && 'mouseenter' || 'click') }}\" /></div>"),i(o)(t),t.$apply();var n=o.find("input").eq(0),p=o.find("input").eq(1),l=(n.scope(),p.scope()),s=l.$$childTail;t.$apply("test = false"),p.click(),expect(s.isOpen).toBeFalsy(),e(p,"mouseenter"),expect(s.isOpen).toBeTruthy()})),it("should accept multiple triggers based on the map for mapped triggers",inject(function(l){o=angular.element('<div><input uib-tooltip="Hello!" tooltip-trigger="focus fakeTriggerAttr" /></div>'),l(o)(t),t.$apply(),i=o.find("input"),n=i.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(i,"focus"),expect(p.isOpen).toBeTruthy(),e(i,"blur"),expect(p.isOpen).toBeFalsy(),e(i,"fakeTriggerAttr"),expect(p.isOpen).toBeTruthy(),e(i,"fakeTriggerAttr"),expect(p.isOpen).toBeFalsy()})),it('should not show when trigger is set to "none"',inject(function(e){o=angular.element('<div><input uib-tooltip="Hello!" tooltip-trigger="none" /></div>'),e(o)(t),t.$apply(),i=o.find("input"),n=i.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),i.trigger("mouseenter"),expect(p.isOpen).toBeFalsy()})),it('should toggle on click and hide when anything else is clicked when trigger is set to "outsideClick"',inject(function(o,l){i=o(angular.element('<span uib-tooltip="tooltip text" tooltip-trigger="outsideClick">Selector Text</span>'))(t),t.$apply(),n=i.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(i,"click"),expect(p.isOpen).toBeTruthy(),e(i,"click"),expect(p.isOpen).toBeFalsy(),e(i,"click"),expect(p.isOpen).toBeTruthy(),angular.element(l[0].body).trigger("click"),p.$digest(),expect(p.isOpen).toBeFalsy()}))}),describe("with an append-to-body attribute",function(){var t,o,i,n,l;beforeEach(inject(function(e){t=e})),afterEach(function(){l.find(".tooltip").remove()}),it("should append to the body",inject(function(s,c){l=c.find("body"),o=angular.element('<div><span uib-tooltip="tooltip text" tooltip-append-to-body="true">Selector Text</span></div>'),s(o)(t),t.$digest(),i=o.find("span"),n=i.scope(),p=n.$$childTail;var a=l.children().length;e(i,"mouseenter"),expect(p.isOpen).toBe(!0),expect(o.children().length).toBe(1),expect(l.children().length).toEqual(a+1)}))}),describe("cleanup",function(){function t(){var e=!1;return angular.forEach(angular.element.cache,function(t){t.data&&t.data.$scope===p&&(e=!0)}),e}var o,i,n,p;beforeEach(inject(function(t,l){o=angular.element('<div><input uib-tooltip="Hello!" tooltip-trigger="fooTrigger" /></div>'),t(o)(l),l.$apply(),i=o.find("input"),n=i.scope(),e(i,"fooTrigger"),p=n.$$childTail.$$childTail})),it("should not contain a cached reference when not visible",inject(function(e){expect(t()).toBeTruthy(),n.$destroy(),expect(t()).toBeFalsy()}))}),describe("observers",function(){var t,o,i,n,p;beforeEach(inject(function(e,l){n=l,n.content="tooltip content",n.placement="top",t=angular.element('<div><input uib-tooltip="{{content}}" tooltip-placement={{placement}} /></div>'),e(t)(n),n.$apply(),o=t.find("input"),i=o.scope(),p=i.$$childTail})),it("should be removed when tooltip hides",inject(function(t){expect(p.content).toBe(void 0),expect(p.placement).toBe(void 0),e(o,"mouseenter"),expect(p.content).toBe("tooltip content"),expect(p.placement).toBe("top"),n.content="tooltip content updated",n.placement="bottom",n.$apply(),expect(p.content).toBe("tooltip content updated"),expect(p.placement).toBe("bottom"),e(o,"mouseleave"),t.flush(),n.content="tooltip content updated after close",n.placement="left",n.$apply(),expect(p.content).toBe("tooltip content updated"),expect(p.placement).toBe("bottom")}))})}),describe("tooltipWithDifferentSymbols",function(){function e(e,t){e.trigger(t),e.scope().$$childTail.$digest()}var t;beforeEach(module("ui.bootstrap.tooltip")),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),beforeEach(module(function(e){e.startSymbol("[["),e.startSymbol("]]")})),it("should show the correct tooltip text",inject(function(o,i){t=angular.element('<div><input type="text" uib-tooltip="My tooltip" tooltip-trigger="focus" tooltip-placement="right" /></div>'),o(t)(i),i.$apply();var n=t.find("input");e(n,"focus"),expect(n.next().find("div").next().html()).toBe("My tooltip")}))}),describe("tooltip positioning",function(){function e(e,t){e.trigger(t),e.scope().$$childTail.$digest()}var t,o,i,n,p,l;beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({animation:!1})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),beforeEach(inject(function(e,s,c){l=c,spyOn(l,"positionElements").and.callThrough(),p=e,p.text="Some Text",o=s(angular.element('<div><span uib-tooltip="{{ text }}">Selector Text</span></div>'))(p),p.$digest(),t=o.find("span"),i=t.scope(),n=i.$$childTail})),it("should re-position when value changes",inject(function(o){e(t,"mouseenter"),p.$digest(),o.flush();var i=l.positionElements.calls.count();p.text="New Text",p.$digest(),o.flush(),expect(t.attr("uib-tooltip")).toBe("New Text"),expect(l.positionElements.calls.count()).toEqual(i+1),expect(l.positionElements.calls.argsFor(i)[0][0]).toBe(t[0]),p.$digest(),o.verifyNoPendingTasks(),expect(l.positionElements.calls.count()).toEqual(i+1),expect(l.positionElements.calls.argsFor(i)[0][0]).toBe(t[0]),p.$digest()}))}),describe("tooltipHtml",function(){function e(e,t){e.trigger(t),e.scope().$$childTail.$digest()}var t,o,i,n,p;beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({animation:!1})})),beforeEach(module("uib/template/tooltip/tooltip-html-popup.html")),beforeEach(inject(function(e,l,s){p=e,p.html='I say: <strong class="hello">Hello!</strong>',p.safeHtml=s.trustAsHtml(p.html),o=l(angular.element('<div><span uib-tooltip-html="safeHtml">Selector Text</span></div>'))(p),p.$digest(),t=o.find("span"),i=t.scope(),n=i.$$childTail})),it("should render html properly",inject(function(){e(t,"mouseenter"),expect(o.find(".tooltip-inner").html()).toBe(p.html)})),it("should not open if html is empty",function(){p.safeHtml=null,p.$digest(),e(t,"mouseenter"),expect(n.isOpen).toBe(!1)}),it("should show on mouseenter and hide on mouseleave",inject(function(i){expect(n.isOpen).toBe(!1),e(t,"mouseenter"),expect(n.isOpen).toBe(!0),expect(o.children().length).toBe(2),expect(i.getTrustedHtml(n.contentExp())).toEqual(p.html),e(t,"mouseleave"),expect(n.isOpen).toBe(!1),expect(o.children().length).toBe(1)}))}),describe("$uibTooltipProvider",function(){function e(e,t){e.trigger(t),e.scope().$$childTail.$digest()}var t,o,i,n,p;describe("popupDelay",function(){beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({popupDelay:1e3})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),beforeEach(inject(function(e,l){o=angular.element('<div><span uib-tooltip="tooltip text">Selector Text</span></div>'),i=e,l(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail})),it("should open after timeout",inject(function(o){e(t,"mouseenter"),expect(p.isOpen).toBe(!1),o.flush(),expect(p.isOpen).toBe(!0)}))}),describe("appendToBody",function(){var l;beforeEach(module("uib/template/tooltip/tooltip-popup.html")),beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({appendToBody:!0})})),afterEach(function(){l.find(".tooltip").remove()}),it("should append to the body",inject(function(s,c,a){l=a.find("body"),o=angular.element('<div><span uib-tooltip="tooltip text">Selector Text</span></div>'),i=s,c(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail;var u=l.children().length;e(t,"mouseenter"),expect(p.isOpen).toBe(!0),expect(o.children().length).toBe(1),expect(l.children().length).toEqual(u+1)})),it("should append to the body when only attribute present",inject(function(s,c,a){l=a.find("body"),o=angular.element('<div><span uib-tooltip="tooltip text" tooltip-append-to-body>Selector Text</span></div>'),i=s,c(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail;var u=l.children().length;e(t,"mouseenter"),expect(p.isOpen).toBe(!0),expect(o.children().length).toBe(1),expect(l.children().length).toEqual(u+1)})),it("should not append to the body when attribute value is false",inject(function(s,c,a){l=a.find("body"),o=angular.element('<div><span uib-tooltip="tooltip text" tooltip-append-to-body="false">Selector Text</span></div>'),i=s,c(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail;var u=l.children().length;e(t,"mouseenter"),expect(p.isOpen).toBe(!0),expect(o.children().length).toBe(2),expect(l.children().length).toEqual(u)}))}),describe("triggers",function(){describe("with a mapped value",function(){beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({trigger:"focus"})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),it("should use the show trigger and the mapped value for the hide trigger",inject(function(l,s){o=angular.element('<div><input uib-tooltip="tooltip text" /></div>'),i=l,s(o)(i),i.$digest(),t=o.find("input"),n=t.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(t,"focus"),expect(p.isOpen).toBeTruthy(),e(t,"blur"),expect(p.isOpen).toBeFalsy()})),it("should override the show and hide triggers if there is an attribute",inject(function(l,s){o=angular.element('<div><input uib-tooltip="tooltip text" tooltip-trigger="mouseenter"/></div>'),i=l,s(o)(i),i.$digest(),t=o.find("input"),n=t.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(t,"mouseenter"),expect(p.isOpen).toBeTruthy(),e(t,"mouseleave"),expect(p.isOpen).toBeFalsy()}))}),describe("with a custom mapped value",function(){beforeEach(module("ui.bootstrap.tooltip",function(e){e.setTriggers({customOpenTrigger:"foo bar"}),e.options({trigger:"customOpenTrigger"})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),it("should use the show trigger and the mapped value for the hide trigger",inject(function(l,s){o=angular.element('<div><input uib-tooltip="tooltip text" /></div>'),i=l,s(o)(i),i.$digest(),t=o.find("input"),n=t.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(t,"customOpenTrigger"),expect(p.isOpen).toBeTruthy(),e(t,"foo"),expect(p.isOpen).toBeFalsy(),e(t,"customOpenTrigger"),expect(p.isOpen).toBeTruthy(),e(t,"bar"),expect(p.isOpen).toBeFalsy()}))}),describe("triggers without a mapped value",function(){beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({trigger:"fakeTrigger"})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),it("should use the show trigger to hide",inject(function(l,s){o=angular.element('<div><span uib-tooltip="tooltip text">Selector Text</span></div>'),i=l,s(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail,expect(p.isOpen).toBeFalsy(),e(t,"fakeTrigger"),expect(p.isOpen).toBeTruthy(),e(t,"fakeTrigger"),expect(p.isOpen).toBeFalsy()}))})}),describe("placementClassPrefix",function(){beforeEach(module("ui.bootstrap.tooltip",function(e){e.options({placementClassPrefix:"uib-"})})),beforeEach(module("uib/template/tooltip/tooltip-popup.html")),it("should add the classes",inject(function(l,s,c){o=angular.element('<div><span uib-tooltip="tooltip text" tooltip-placement="top-right"></span></div>'),i=l,s(o)(i),i.$digest(),t=o.find("span"),n=t.scope(),p=n.$$childTail,expect(o.children().length).toBe(1),e(t,"mouseenter"),c.flush();var a=o.find(".tooltip");expect(a.hasClass("top")).toBe(!0),expect(a.hasClass("uib-top-right")).toBe(!0)}))})});