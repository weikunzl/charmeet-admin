describe("datepicker",function(){function e(){return g.find("th").eq(1).find("button").first()}function t(){return e().text()}function n(){e().click()}function i(e){for(var t=g.find("th").eq(0).find("button").eq(0),n=0,i=e||1;i>n;n++)t.click()}function a(){g.find("th").eq(2).find("button").eq(0).click()}function o(){return g.find("thead").find("tr").eq(1)}function c(e){for(var t=o().find("th"),n=[],i=e?1:0,a=t.length;a>i;i++)n.push(t.eq(i).text());return n}function r(){for(var e=g.find("tbody").find("tr"),t=[],n=0,i=e.length;i>n;n++)t.push(e.eq(n).find("td").eq(0).first().text());return t}function d(e){for(var t=g.find("tbody").find("tr"),n=[],i=0,a=t.length;a>i;i++){for(var o=t.eq(i).find("td"),c=[],r=e?1:0,d=o.length;d>r;r++)c.push(o.eq(r).find("button").text());n.push(c)}return n}function u(e){l().eq(e).click()}function l(e){return g.find("tbody").find("button")}function p(e){var t=l();angular.forEach(t,function(t,n){expect(angular.element(t).hasClass("btn-info")).toBe(n===e)})}function s(e){var t=l(),n=$.grep(t,function(e,t){return angular.element(e).hasClass("btn-info")})[0];return angular.element(n)}function f(e,t,n){var i={enter:13,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,esc:27},a=$.Event("keydown");a.which=i[t],n&&(a.ctrlKey=!0),e.trigger(a)}var b,m,h,g;beforeEach(module("ui.bootstrap.datepicker")),beforeEach(module("uib/template/datepicker/datepicker.html")),beforeEach(module("uib/template/datepicker/day.html")),beforeEach(module("uib/template/datepicker/month.html")),beforeEach(module("uib/template/datepicker/year.html")),beforeEach(module(function(e){e.directive("dateModel",function(){return{restrict:"A",require:"ngModel",link:function(e,t,n,i){i.$formatters.push(function(e){return new Date(e.date)}),i.$parsers.push(function(e){return{type:"date",date:e.toUTCString()}})}}})})),describe("$datepickerLiteralWarning",function(){var e,t,n;it("should warn when using literals for min date by default",function(){inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"warn"),n.options={minDate:"1984-01-01"},g=e('<uib-datepicker ng-model="locals.date" datepicker-options="options"></uib-datepicker>')(n),n.$digest(),expect(t.warn).toHaveBeenCalledWith("Literal date support has been deprecated, please switch to date object usage")}),it("should suppress warning when using literals for min date",function(){module(function(e){e.value("$datepickerLiteralWarning",!1)}),inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"warn"),n.options={minDate:"1984-01-01"},g=e('<uib-datepicker ng-model="locals.date" datepicker-options="options"></uib-datepicker>')(n),n.$digest(),expect(t.warn).not.toHaveBeenCalled()}),it("should warn when using literals for max date by default",function(){inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"warn"),n.options={maxDate:"1984-01-01"},g=e('<uib-datepicker ng-model="locals.date" datepicker-options="options"></uib-datepicker>')(n),n.$digest(),expect(t.warn).toHaveBeenCalledWith("Literal date support has been deprecated, please switch to date object usage")}),it("should suppress warning when using literals for max date",function(){module(function(e){e.value("$datepickerLiteralWarning",!1)}),inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"warn"),n.options={maxDate:"1984-01-01"},g=e('<uib-datepicker ng-model="locals.date" datepicker-options="options"></uib-datepicker>')(n),n.$digest(),expect(t.warn).not.toHaveBeenCalled()})}),describe("$datepickerSuppressError",function(){var e,t,n;it("should not suppress log error message for ng-model date error by default",function(){inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"error"),g=e('<uib-datepicker ng-model="locals.date"></uib-datepicker>')(n),n.locals={date:"lalala"},n.$digest(),expect(t.error).toHaveBeenCalled()}),it("should not suppress log error message for ng-model date error when false",function(){module(function(e){e.value("$datepickerSuppressError",!1)}),inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"error"),g=e('<uib-datepicker ng-model="locals.date"></uib-datepicker>')(n),n.locals={date:"lalala"},n.$digest(),expect(t.error).toHaveBeenCalled()}),it("should suppress log error message for ng-model date error when true",function(){module(function(e){e.value("$datepickerSuppressError",!0)}),inject(function(i,a,o){t=i,n=a.$new(),e=o}),spyOn(t,"error"),g=e('<uib-datepicker ng-model="locals.date"></uib-datepicker>')(n),n.locals={date:"lalala"},n.$digest(),expect(t.error).not.toHaveBeenCalled()})}),describe("",function(){beforeEach(inject(function(e,t,n){m=e,b=t,b.date=new Date("September 30, 2010 15:30:00"),h=n})),describe("with no initial date",function(){beforeEach(function(){jasmine.clock().install()}),afterEach(function(){jasmine.clock().uninstall()}),it("should have an active date equal to the current date",function(){var e=new Date(2015,2,23);jasmine.clock().mockDate(e),g=m('<uib-datepicker ng-model="fooDate"></uib-datepicker')(b),b.$digest(),expect(g.controller("uibDatepicker").activeDate.getTime()).toEqual(e.getTime())})}),it("should support custom templates",function(){h.put("foo/bar.html","<div>baz</div>"),g=m('<uib-datepicker ng-model="date" template-url="foo/bar.html"></uib-datepicker>')(b),b.$digest(),expect(g.html()).toBe("baz")}),it("should support custom day, month and year templates",function(){h.put("foo/day.html","<div>day</div>"),h.put("foo/month.html","<div>month</div>"),h.put("foo/year.html","<div>year</div>"),h.put("foo/bar.html",'<div><uib-daypicker template-url="foo/day.html"></uib-daypicker><uib-monthpicker template-url="foo/month.html"></uib-monthpicker><uib-yearpicker template-url="foo/year.html"></uib-yearpicker></div>'),g=m('<uib-datepicker ng-model="date" template-url="foo/bar.html"></uib-datepicker>')(b),b.$digest();var e='<div template-url="foo/day.html">day</div><div template-url="foo/month.html">month</div><div template-url="foo/year.html">year</div>';expect(g.html()).toBe(e)}),it("should expose the controller in the template",function(){h.put("uib/template/datepicker/datepicker.html","<div>{{datepicker.text}}</div>"),g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest();var e=g.controller("uib-datepicker");expect(e).toBeDefined(),expect(g.html()).toBe(""),e.text="baz",b.$digest(),expect(g.html()).toBe("baz")}),describe("basic functionality",function(){beforeEach(function(){g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest()}),it("is has a `<table>` element",function(){expect(g.find("table").length).toBe(1)}),it("shows the correct title",function(){expect(t()).toBe("September 2010")}),it("shows the label row & the correct day labels",function(){expect(o().css("display")).not.toBe("none"),expect(c(!0)).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"])}),it("renders the calendar days correctly",function(){expect(d(!0)).toEqual([["29","30","31","01","02","03","04"],["05","06","07","08","09","10","11"],["12","13","14","15","16","17","18"],["19","20","21","22","23","24","25"],["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"]])}),it("renders the week numbers based on ISO 8601",function(){expect(r()).toEqual(["35","36","37","38","39","40"])}),it("value is correct",function(){expect(b.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has activeDate value of model",function(){expect(g.controller("uibDatepicker").activeDate).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the correct day",function(){p(32)}),it("has no `selected` day when model is cleared",function(){b.date=null,b.$digest(),expect(b.date).toBe(null),p(null)}),it("does not change current view when model is cleared",function(){b.date=null,b.$digest(),expect(b.date).toBe(null),expect(t()).toBe("September 2010")}),it("`disables` visible dates from other months",function(){var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).find("span").hasClass("text-muted")).toBe(3>t||t>32)})}),it("updates the model when a day is clicked",function(){u(17),expect(b.date).toEqual(new Date("September 15, 2010 15:30:00"))}),it("moves to the previous month & renders correctly when `previous` button is clicked",function(){i(),expect(t()).toBe("August 2010"),expect(c(!0)).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(d(!0)).toEqual([["01","02","03","04","05","06","07"],["08","09","10","11","12","13","14"],["15","16","17","18","19","20","21"],["22","23","24","25","26","27","28"],["29","30","31","01","02","03","04"],["05","06","07","08","09","10","11"]]),p(null,null)}),it("updates the model only when a day is clicked in the `previous` month",function(){i(),expect(b.date).toEqual(new Date("September 30, 2010 15:30:00")),u(17),expect(b.date).toEqual(new Date("August 18, 2010 15:30:00"))}),it("moves to the next month & renders correctly when `next` button is clicked",function(){a(),expect(t()).toBe("October 2010"),expect(c(!0)).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(d(!0)).toEqual([["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"],["10","11","12","13","14","15","16"],["17","18","19","20","21","22","23"],["24","25","26","27","28","29","30"],["31","01","02","03","04","05","06"]]),p(4)}),it("updates the model only when a day is clicked in the `next` month",function(){a(),expect(b.date).toEqual(new Date("September 30, 2010 15:30:00")),u(17),expect(b.date).toEqual(new Date("October 13, 2010 15:30:00"))}),it("updates the calendar when a day of another month is selected",function(){u(33),expect(b.date).toEqual(new Date("October 01, 2010 15:30:00")),expect(t()).toBe("October 2010"),expect(c(!0)).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(d(!0)).toEqual([["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"],["10","11","12","13","14","15","16"],["17","18","19","20","21","22","23"],["24","25","26","27","28","29","30"],["31","01","02","03","04","05","06"]]),p(5)}),it('should not "jump" months',function(){b.date=new Date("January 30, 2014"),b.$digest(),a(),expect(t()).toBe("February 2014"),i(),expect(t()).toBe("January 2014")}),it("should not change model when going to next month - #5441",function(){b.date=new Date("January 30, 2014"),b.$digest(),a(),expect(b.date).toEqual(new Date("January 30, 2014"))}),describe("when `model` changes",function(){function e(){expect(t()).toBe("November 2005"),expect(d(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]]),p(8)}describe("to a Date object",function(){it("updates",function(){b.date=new Date("November 7, 2005 23:30:00"),b.$digest(),e(),expect(angular.isDate(b.date)).toBe(!0)}),it("to a date that is invalid, it doesn`t update",function(){b.date=new Date("pizza"),b.$digest(),expect(t()).toBe("September 2010"),expect(angular.isDate(b.date)).toBe(!0),expect(isNaN(b.date)).toBe(!0)})}),describe("not to a Date object",function(){it("to a Number, it updates calendar",function(){b.date=parseInt(new Date("November 7, 2005 23:30:00").getTime(),10),b.$digest(),e(),expect(angular.isNumber(b.date)).toBe(!0)}),it("to a string that can be parsed by Date, it updates calendar",function(){b.date="November 7, 2005 23:30:00",b.$digest(),e(),expect(angular.isString(b.date)).toBe(!0)}),it("to a string that cannot be parsed by Date, it doesn't update",function(){b.date="pizza",b.$digest(),expect(t()).toBe("September 2010"),expect(b.date).toBe("pizza")})})}),it("does not loop between after max mode",function(){expect(t()).toBe("September 2010"),n(),expect(t()).toBe("2010"),n(),expect(t()).toBe("2001 - 2020"),n(),expect(t()).toBe("2001 - 2020")}),describe("month selection mode",function(){beforeEach(function(){n()}),it("shows the year as title",function(){expect(t()).toBe("2010")}),it("shows months as options",function(){expect(d()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]])}),it("does not change the model",function(){expect(b.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the correct month",function(){p(8)}),it("moves to the previous year when `previous` button is clicked",function(){i(),expect(t()).toBe("2009"),expect(d()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]]),p(null)}),it("moves to the next year when `next` button is clicked",function(){a(),expect(t()).toBe("2011"),expect(d()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]]),p(null)}),it("renders correctly when a month is clicked",function(){i(5),expect(t()).toBe("2005"),u(10),expect(b.date).toEqual(new Date("September 30, 2010 15:30:00")),expect(t()).toBe("November 2005"),expect(d(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]]),u(17),expect(b.date).toEqual(new Date("November 16, 2005 15:30:00"))})}),describe("year selection mode",function(){beforeEach(function(){n(),n()}),it("shows the year range as title",function(){expect(t()).toBe("2001 - 2020")}),it("shows years as options",function(){expect(d()).toEqual([["2001","2002","2003","2004","2005"],["2006","2007","2008","2009","2010"],["2011","2012","2013","2014","2015"],["2016","2017","2018","2019","2020"]])}),it("does not change the model",function(){expect(b.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the selected year",function(){p(9)}),it("moves to the previous year set when `previous` button is clicked",function(){i(),expect(t()).toBe("1981 - 2000"),expect(d()).toEqual([["1981","1982","1983","1984","1985"],["1986","1987","1988","1989","1990"],["1991","1992","1993","1994","1995"],["1996","1997","1998","1999","2000"]]),p(null)}),it("moves to the next year set when `next` button is clicked",function(){a(),expect(t()).toBe("2021 - 2040"),expect(d()).toEqual([["2021","2022","2023","2024","2025"],["2026","2027","2028","2029","2030"],["2031","2032","2033","2034","2035"],["2036","2037","2038","2039","2040"]]),p(null)})}),describe("keyboard navigation",function(){function e(){return g.find(".active").eq(0).text()}describe("day mode",function(){it("will be able to activate previous day",function(){f(g,"left"),expect(e()).toBe("29")}),it("will be able to select with enter",function(){f(g,"left"),f(g,"enter"),expect(b.date).toEqual(new Date("September 29, 2010 15:30:00"))}),it("will be able to select with space",function(){f(g,"left"),f(g,"space"),expect(b.date).toEqual(new Date("September 29, 2010 15:30:00"))}),it("will be able to activate next day",function(){f(g,"right"),expect(e()).toBe("01"),expect(t()).toBe("October 2010")}),it("will be able to activate same day in previous week",function(){f(g,"up"),expect(e()).toBe("23")}),it("will be able to activate same day in next week",function(){f(g,"down"),expect(e()).toBe("07"),expect(t()).toBe("October 2010")}),it("will be able to activate same date in previous month",function(){f(g,"pageup"),expect(e()).toBe("30"),expect(t()).toBe("August 2010")}),it("will be able to activate same date in next month",function(){f(g,"pagedown"),expect(e()).toBe("30"),expect(t()).toBe("October 2010")}),it("will be able to activate first day of the month",function(){f(g,"home"),expect(e()).toBe("01"),expect(t()).toBe("September 2010")}),it("will be able to activate last day of the month",function(){b.date=new Date("September 1, 2010 15:30:00"),b.$digest(),f(g,"end"),expect(e()).toBe("30"),expect(t()).toBe("September 2010")}),it("will be able to move to month mode",function(){f(g,"up",!0),expect(e()).toBe("September"),expect(t()).toBe("2010")}),it("will not respond when trying to move to lower mode",function(){f(g,"down",!0),expect(e()).toBe("30"),expect(t()).toBe("September 2010")})}),describe("month mode",function(){beforeEach(function(){f(g,"up",!0)}),it("will be able to activate previous month",function(){f(g,"left"),expect(e()).toBe("August")}),it("will be able to activate next month",function(){f(g,"right"),expect(e()).toBe("October")}),it("will be able to activate same month in previous row",function(){f(g,"up"),expect(e()).toBe("June")}),it("will be able to activate same month in next row",function(){f(g,"down"),expect(e()).toBe("December")}),it("will be able to activate same date in previous year",function(){f(g,"pageup"),expect(e()).toBe("September"),expect(t()).toBe("2009")}),it("will be able to activate same date in next year",function(){f(g,"pagedown"),expect(e()).toBe("September"),expect(t()).toBe("2011")}),it("will be able to activate first month of the year",function(){f(g,"home"),expect(e()).toBe("January"),expect(t()).toBe("2010")}),it("will be able to activate last month of the year",function(){f(g,"end"),expect(e()).toBe("December"),expect(t()).toBe("2010")}),it("will be able to move to year mode",function(){f(g,"up",!0),expect(e()).toBe("2010"),expect(t()).toBe("2001 - 2020")}),it("will be able to move to day mode",function(){f(g,"down",!0),expect(e()).toBe("30"),expect(t()).toBe("September 2010")}),it("will move to day mode when selecting",function(){f(g,"left",!0),f(g,"enter",!0),expect(e()).toBe("30"),expect(t()).toBe("August 2010"),expect(b.date).toEqual(new Date("September 30, 2010 15:30:00"))})}),describe("year mode",function(){beforeEach(function(){f(g,"up",!0),f(g,"up",!0)}),it("will be able to activate previous year",function(){f(g,"left"),expect(e()).toBe("2009")}),it("will be able to activate next year",function(){f(g,"right"),expect(e()).toBe("2011")}),it("will be able to activate same year in previous row",function(){f(g,"up"),expect(e()).toBe("2005")}),it("will be able to activate same year in next row",function(){f(g,"down"),expect(e()).toBe("2015")}),it("will be able to activate same date in previous view",function(){f(g,"pageup"),expect(e()).toBe("1990")}),it("will be able to activate same date in next view",function(){f(g,"pagedown"),expect(e()).toBe("2030")}),it("will be able to activate first year of the year",function(){f(g,"home"),expect(e()).toBe("2001")}),it("will be able to activate last year of the year",function(){f(g,"end"),expect(e()).toBe("2020")}),it("will not respond when trying to move to upper mode",function(){f(g,"up",!0),expect(t()).toBe("2001 - 2020")}),it("will be able to move to month mode",function(){f(g,"down",!0),expect(e()).toBe("September"),expect(t()).toBe("2010")}),it("will move to month mode when selecting",function(){f(g,"left",!0),f(g,"enter",!0),expect(e()).toBe("September"),expect(t()).toBe("2009"),expect(b.date).toEqual(new Date("September 30, 2010 15:30:00"))})}),describe("`aria-activedescendant`",function(){function e(){var e=g.find("table").attr("aria-activedescendant");expect(g.find("#"+e+" > button")).toHaveClass("active")}it("updates correctly",function(){f(g,"left"),e(),f(g,"down"),e(),f(g,"up",!0),e(),f(g,"up",!0),e()})})})}),describe("attribute `datepicker-options`",function(){describe("startingDay",function(){beforeEach(function(){b.options={startingDay:1},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("shows the day labels rotated",function(){expect(c(!0)).toEqual(["Mon","Tue","Wed","Thu","Fri","Sat","Sun"])}),it("renders the calendar days correctly",function(){expect(d(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]])}),it("renders the week numbers correctly",function(){expect(r()).toEqual(["35","36","37","38","39","40"])})}),describe("showWeeks",function(){beforeEach(function(){b.options={showWeeks:!1},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("hides week numbers based on variable",function(){expect(o().find("th").length).toEqual(7);for(var e=g.find("tbody").find("tr"),t=0;5>t;t++)expect(e.eq(t).find("td").length).toEqual(7)})}),describe("minDate with no initial value",function(){beforeEach(function(){b.options={},b.date=new Date("September 10, 2010"),g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("should toggle appropriately",function(){var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)}),b.options.minDate=new Date("September 12, 2010"),b.$digest(),refreshedButtons=l(),angular.forEach(refreshedButtons,function(e,t){expect(angular.element(e).prop("disabled")).toBe(14>t)})})}),describe("minDate",function(){beforeEach(function(){b.options={minDate:new Date("September 12, 2010")},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("disables appropriate days in current month",function(){var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(14>t)})}),it("disables appropriate days when min date changes",function(){b.options.minDate=new Date("September 5, 2010"),b.$digest();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(7>t)})}),it("invalidates when model is a disabled date",function(){b.options.minDate=new Date("September 5, 2010"),b.date=new Date("September 2, 2010"),b.$digest(),expect(g.hasClass("ng-invalid")).toBeTruthy(),expect(g.hasClass("ng-invalid-date-disabled")).toBeTruthy()}),it("disables all days in previous month",function(){i();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!0)})}),it("disables no days in next month",function(){a();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})}),it("disables appropriate months in current year",function(){n();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(8>t)})}),it("disables all months in previous year",function(){n(),i();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!0)})}),it("disables no months in next year",function(){n(),a();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})}),it("enables everything before if it is cleared",function(){b.options.minDate=null,b.date=new Date("December 20, 1949"),b.$digest(),n();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})}),it("accepts literals, 'yyyy-MM-dd' case",function(){b.options.minDate="2010-09-05",g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(7>t)})})}),describe("maxDate with no initial value",function(){beforeEach(function(){b.options={},b.date=new Date("September 10, 2010"),g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("should toggle appropriately",function(){var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)}),b.options.maxDate=new Date("September 25, 2010"),b.$digest(),refreshedButtons=l(),angular.forEach(refreshedButtons,function(e,t){expect(angular.element(e).prop("disabled")).toBe(t>27)})})}),describe("maxDate",function(){beforeEach(function(){b.options={maxDate:new Date("September 25, 2010")},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("disables appropriate days in current month",function(){var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(t>27)})}),it("disables appropriate days when max date changes",function(){b.options.maxDate=new Date("September 18, 2010"),b.$digest();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(t>20)})}),it("invalidates when model is a disabled date",function(){b.options.maxDate=new Date("September 18, 2010"),b.$digest(),expect(g.hasClass("ng-invalid")).toBeTruthy(),expect(g.hasClass("ng-invalid-date-disabled")).toBeTruthy()}),it("disables no days in previous month",function(){i();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})}),it("disables all days in next month",function(){a();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!0)})}),it("disables appropriate months in current year",function(){n();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(t>8)})}),it("disables no months in previous year",function(){n(),i();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})}),it("disables all months in next year",function(){n(),a();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!0)})}),it("enables everything after if it is cleared",function(){b.options.maxDate=null,b.$digest();var e=l();angular.forEach(e,function(e,t){expect(angular.element(e).prop("disabled")).toBe(!1)})})}),describe("formatting",function(){beforeEach(function(){b.options={formatDay:"d",formatDayHeader:"EEEE",formatDayTitle:"MMMM, yy",formatMonth:"MMM",formatMonthTitle:"yy",formatYear:"yy",yearColumns:4,yearRows:3},g=m('<uib-datepicker ng-model="date"datepicker-options="options"></uib-datepicker>')(b),b.$digest()}),it("changes the title format in `day` mode",function(){expect(t()).toBe("September, 10")}),it("changes the title & months format in `month` mode",function(){n(),expect(t()).toBe("10"),expect(d()).toEqual([["Jan","Feb","Mar"],["Apr","May","Jun"],["Jul","Aug","Sep"],["Oct","Nov","Dec"]])}),it("changes the title, year format & range in `year` mode",function(){n(),n(),expect(t()).toBe("05 - 16"),expect(d()).toEqual([["05","06","07","08"],["09","10","11","12"],["13","14","15","16"]])}),it("shows day labels",function(){expect(c(!0)).toEqual(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"])}),it("changes the day format",function(){expect(d(!0)).toEqual([["29","30","31","1","2","3","4"],["5","6","7","8","9","10","11"],["12","13","14","15","16","17","18"],["19","20","21","22","23","24","25"],["26","27","28","29","30","1","2"],["3","4","5","6","7","8","9"]])})})}),describe("setting datepickerConfig",function(){var e={};beforeEach(inject(function(t){angular.extend(e,t),t.formatDay="d",t.formatMonth="MMM",t.formatYear="yy",t.formatDayHeader="EEEE",t.formatDayTitle="MMM, yy",t.formatMonthTitle="yy",t.showWeeks=!1,t.yearRows=2,t.yearColumns=5,t.startingDay=6,g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest()})),afterEach(inject(function(t){Object.keys(t).forEach(function(e){delete t[e]}),angular.extend(t,e)})),it("changes the title format in `day` mode",function(){expect(t()).toBe("Sep, 10")}),it("changes the title & months format in `month` mode",function(){n(),expect(t()).toBe("10"),expect(d()).toEqual([["Jan","Feb","Mar"],["Apr","May","Jun"],["Jul","Aug","Sep"],["Oct","Nov","Dec"]])}),it("changes the title, year format & range in `year` mode",function(){n(),n(),expect(t()).toBe("01 - 10"),expect(d()).toEqual([["01","02","03","04","05"],["06","07","08","09","10"]])}),it("changes the `starting-day` & day headers & format",function(){expect(c()).toEqual(["Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"]),expect(d(!1)).toEqual([["28","29","30","31","1","2","3"],["4","5","6","7","8","9","10"],["11","12","13","14","15","16","17"],["18","19","20","21","22","23","24"],["25","26","27","28","29","30","1"],["2","3","4","5","6","7","8"]])}),it("changes initial visibility for weeks",function(){expect(o().find("th").length).toEqual(7);for(var e=g.find("tbody").find("tr"),t=0;5>t;t++)expect(e.eq(t).find("td").length).toEqual(7)})}),describe("disabled",function(){beforeEach(function(){g=m('<uib-datepicker ng-model="date" disabled></uib-datepicker>')(b),b.$digest()}),it("should have all dates disabled",function(){g.find(".uib-day button").each(function(e,t){expect($(t).prop("disabled")).toBe(!0)})})}),describe("ng-disabled",function(){beforeEach(function(){b.disabled=!1,g=m('<uib-datepicker ng-model="date" ng-disabled="disabled"></uib-datepicker>')(b),b.$digest()}),it("should toggle disabled state with value of ng-disabled",function(){g.find(".uib-day button").each(function(e,t){expect($(t).prop("disabled")).toBe(!1)}),b.disabled=!0,b.$digest(),g.find(".uib-day button").each(function(e,t){expect($(t).prop("disabled")).toBe(!0)}),b.disabled=!1,b.$digest(),g.find(".uib-day button").each(function(e,t){expect($(t).prop("disabled")).toBe(!1)})})}),describe("datepickerConfig ngModelOptions",function(){describe("timezone",function(){var e={};beforeEach(inject(function(t){angular.extend(e,t),t.ngModelOptions={timezone:"+600"},b.date=new Date("2005-11-07T10:00:00.000Z")})),afterEach(inject(function(t){angular.extend(t,e)})),describe("basics",function(){beforeEach(function(){g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest()}),it("sets date to appropriate date",function(){p(8)}),it("updates the input when a day is clicked",function(){u(9),expect(b.date).toEqual(new Date("2005-11-08T10:00:00.000Z"))})}),it("init date",function(){b.options={initDate:new Date("2006-01-01T00:00:00.000Z")},b.date=null,g=m('<uib-datepicker ng-model="date" datepicker-options="options"><uib-datepicker>')(b),b.$digest(),expect(t()).toEqual("January 2006")}),it("min date",function(){b.options={minDate:new Date("2010-10-01T00:00:00.000Z")},g=m('<uib-datepicker ng-model="date" datepicker-options="options"><uib-datepicker>')(b),b.$digest(),expect(s().prop("disabled")).toBe(!0)})})}),describe("uib-datepicker ng-model-options",function(){describe("timezone",function(){beforeEach(inject(function(){b.date=new Date("2005-11-07T10:00:00.000Z"),b.ngModelOptions={timezone:"+600"},g=m('<uib-datepicker ng-model="date" ng-model-options="ngModelOptions"></uib-datepicker>')(b),b.$digest()})),it("sets date to appropriate date",function(){p(8)}),it("updates the input when a day is clicked",function(){u(9),expect(b.date).toEqual(new Date("2005-11-08T10:00:00.000Z"))})})}),describe("with empty initial state",function(){beforeEach(inject(function(){b.date=null,g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest()})),it("is has a `<table>` element",function(){expect(g.find("table").length).toBe(1)}),it("is shows rows with days",function(){expect(g.find("tbody").find("tr").length).toBeGreaterThan(3)}),it("sets default 00:00:00 time for selected date",function(){b.date=new Date("August 1, 2013"),b.$digest(),b.date=null,b.$digest(),u(14),expect(b.date).toEqual(new Date("August 11, 2013 00:00:00"))})}),describe("`init-date`",function(){beforeEach(inject(function(){b.date=null,b.options={initDate:new Date("November 9, 1980")},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()})),it("does not alter the model",function(){expect(b.date).toBe(null)}),it("shows the correct title",function(){expect(t()).toBe("November 1980")})}),describe("`datepicker-mode`",function(){beforeEach(inject(function(){b.date=new Date("August 11, 2013"),b.options={datepickerMode:"month"},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()})),it("shows the correct title",function(){expect(t()).toBe("2013")}),it("updates binding",function(){n(),expect(b.options.datepickerMode).toBe("year")})}),describe("`min-mode`",function(){beforeEach(inject(function(){b.date=new Date("August 11, 2013"),b.options={minMode:"month",datepickerMode:"month"},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),
b.$digest()})),it("does not move below it",function(){expect(t()).toBe("2013"),u(5),expect(t()).toBe("2013"),n(),expect(t()).toBe("2001 - 2020"),b.options.minMode="year",b.$digest(),u(5),expect(t()).toBe("2001 - 2020")}),it("updates current mode if necessary",function(){expect(t()).toBe("2013"),b.options.minMode="year",b.$digest(),expect(t()).toBe("2001 - 2020")})}),describe("`max-mode`",function(){beforeEach(inject(function(){b.date=new Date("August 11, 2013"),b.options={maxMode:"month"},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest()})),it("does not move above it",function(){expect(t()).toBe("August 2013"),n(),expect(t()).toBe("2013"),n(),expect(t()).toBe("2013"),u(10),expect(t()).toBe("November 2013"),b.options.maxMode="day",b.$digest(),n(),expect(t()).toBe("November 2013")}),it("disables the title button at it",function(){expect(e().prop("disabled")).toBe(!1),n(),expect(e().prop("disabled")).toBe(!0),n(),expect(e().prop("disabled")).toBe(!0),u(10),expect(e().prop("disabled")).toBe(!1),b.options.maxMode="day",b.$digest(),expect(e().prop("disabled")).toBe(!0)}),it("updates current mode if necessary",function(){expect(t()).toBe("August 2013"),n(),expect(t()).toBe("2013"),b.options.maxMode="day",b.$digest(),expect(t()).toBe("August 2013")})}),describe("with an ngModelController having formatters and parsers",function(){beforeEach(inject(function(){b.date={type:"date",date:"April 1, 2015 00:00:00"},g=m('<uib-datepicker ng-model="date" date-model></uib-datepicker>')(b),b.$digest()})),it("updates the view",function(){b.date={type:"date",date:"April 15, 2015 00:00:00"},b.$digest(),p(17)}),it("updates the model",function(){u(17),expect(b.date.type).toEqual("date"),expect(new Date(b.date.date)).toEqual(new Date("April 15, 2015 00:00:00"))})}),describe("thursdays determine week count",function(){beforeEach(inject(function(){b.date=new Date("June 07, 2014")})),it("with the default starting day (sunday)",function(){g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["23","24","25","26","27","28"])}),describe("when starting date",function(){it("is monday",function(){b.options={startingDay:1},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["22","23","24","25","26","27"])}),it("is thursday",function(){b.options={startingDay:4},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["22","23","24","25","26","27"])}),it("is saturday",function(){b.options={startingDay:6},g=m('<uib-datepicker ng-model="date" datepicker-options="options"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["23","24","25","26","27","28"])})}),describe("first week in january",function(){it("in current year",function(){b.date=new Date("January 07, 2014"),g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["1","2","3","4","5","6"])}),it("in last year",function(){b.date=new Date("January 07, 2010"),g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["53","1","2","3","4","5"])})}),describe("last week(s) in december",function(){beforeEach(inject(function(){b.date=new Date("December 07, 2014")})),it("in next year",function(){g=m('<uib-datepicker ng-model="date"></uib-datepicker>')(b),b.$digest(),expect(r()).toEqual(["49","50","51","52","1","2"])})})})})});