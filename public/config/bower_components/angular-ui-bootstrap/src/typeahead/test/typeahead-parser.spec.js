describe("syntax parser",function(){var a,e,t;beforeEach(module("ui.bootstrap.typeahead")),beforeEach(inject(function(l,o,i){a=i,e=l,t=o})),it("should parse the simplest array-based syntax",function(){e.states=["Alabama","California","Delaware"];var t=a.parse("state for state in states | filter:$viewValue"),l=t.itemName,o={$viewValue:"al"};expect(t.source(e,o)).toEqual(["Alabama","California"]),o[l]="Alabama",expect(t.viewMapper(e,o)).toEqual("Alabama"),expect(t.modelMapper(e,o)).toEqual("Alabama")}),it("should parse the simplest function-based syntax",function(){e.getStates=function(a){return t(["Alabama","California","Delaware"],a)};var l=a.parse("state for state in getStates($viewValue)"),o=l.itemName,i={$viewValue:"al"};expect(l.source(e,i)).toEqual(["Alabama","California"]),i[o]="Alabama",expect(l.viewMapper(e,i)).toEqual("Alabama"),expect(l.modelMapper(e,i)).toEqual("Alabama")}),it("should allow to specify custom model mapping that is used as a label as well",function(){e.states=[{code:"AL",name:"Alabama"},{code:"CA",name:"California"},{code:"DE",name:"Delaware"}];var t=a.parse('state.name for state in states | filter:$viewValue | orderBy:"name":true'),l=t.itemName;expect(l).toEqual("state"),expect(t.source(e,{$viewValue:"al"})).toEqual([{code:"CA",name:"California"},{code:"AL",name:"Alabama"}]);var o={$viewValue:"al"};o[l]={code:"AL",name:"Alabama"},expect(t.viewMapper(e,o)).toEqual("Alabama"),expect(t.modelMapper(e,o)).toEqual("Alabama")}),it("should allow to specify custom view and model mappers",function(){e.states=[{code:"AL",name:"Alabama"},{code:"CA",name:"California"},{code:"DE",name:"Delaware"}];var t=a.parse('state.code as state.name + " ("+state.code+")" for state in states | filter:$viewValue | orderBy:"name":true'),l=t.itemName;expect(t.source(e,{$viewValue:"al"})).toEqual([{code:"CA",name:"California"},{code:"AL",name:"Alabama"}]);var o={$viewValue:"al"};o[l]={code:"AL",name:"Alabama"},expect(t.viewMapper(e,o)).toEqual("Alabama (AL)"),expect(t.modelMapper(e,o)).toEqual("AL")})});