describe("pager directive",function(){function e(){return u.find("li").length}function t(e){return u.find("li").eq(e)}function a(e){t(e).find("a").click()}function n(e,t){return e.find("li").eq(t).find("a")}function i(e){s.currentPage=e,s.$digest()}var o,s,c,r,l,u;beforeEach(module("ui.bootstrap.pager")),beforeEach(module("uib/template/pager/pager.html")),beforeEach(inject(function(e,t,a,n){o=e,s=t,s.total=47,s.currentPage=3,c=a,r=n,l=c.find("body"),u=o('<uib-pager total-items="total" ng-model="currentPage"></uib-pager>')(s),s.$digest()})),it('has a "pager" css class',function(){expect(u.hasClass("pager")).toBe(!0)}),it("contains 2 li elements",function(){expect(e()).toBe(2),expect(t(0).text()).toBe("« Previous"),expect(t(-1).text()).toBe("Next »")}),it("aligns previous & next page",function(){expect(t(0)).toHaveClass("previous"),expect(t(0)).not.toHaveClass("next"),expect(t(-1)).not.toHaveClass("previous"),expect(t(-1)).toHaveClass("next")}),it("exposes the controller on the template",function(){r.put("uib/template/pager/pager.html","<div>{{pager.text}}</div>"),u=o("<uib-pager></uib-pager>")(s),s.$digest();var e=u.controller("uibPager");expect(e).toBeDefined(),e.text="foo",s.$digest(),expect(u.html()).toBe("foo")}),it('disables the "previous" link if current page is 1',function(){i(1),expect(t(0)).toHaveClass("disabled")}),it('disables the "next" link if current page is num-pages',function(){i(5),expect(t(-1)).toHaveClass("disabled")}),it('changes currentPage if the "previous" link is clicked',function(){a(0),expect(s.currentPage).toBe(2)}),it('changes currentPage if the "next" link is clicked',function(){a(-1),expect(s.currentPage).toBe(4)}),it('does not change the current page on "previous" click if already at first page',function(){i(1),a(0),expect(s.currentPage).toBe(1)}),it('does not change the current page on "next" click if already at last page',function(){i(5),a(-1),expect(s.currentPage).toBe(5)}),it("executes the `ng-change` expression when an element is clicked",function(){s.selectPageHandler=jasmine.createSpy("selectPageHandler"),u=o('<uib-pager total-items="total" ng-model="currentPage" ng-change="selectPageHandler()"></uib-pager>')(s),s.$digest(),a(-1),expect(s.selectPageHandler).toHaveBeenCalled()}),it("does not changes the number of pages when `total-items` changes",function(){s.total=73,s.$digest(),expect(e()).toBe(2),expect(t(0).text()).toBe("« Previous"),expect(t(-1).text()).toBe("Next »")}),it('should blur the "next" link after it has been clicked',function(){l.append(u);var e=n(u,-1);e.focus(),expect(e).toHaveFocus(),e.click(),expect(e).not.toHaveFocus(),u.remove()}),it('should blur the "prev" link after it has been clicked',function(){l.append(u);var e=n(u,-1);e.focus(),expect(e).toHaveFocus(),e.click(),expect(e).not.toHaveFocus(),u.remove()}),it("allows custom templates",function(){r.put("foo/bar.html","<div>baz</div>"),u=o('<uib-pager template-url="foo/bar.html"></uib-pager>')(s),s.$digest(),expect(u.html()).toBe("baz")}),describe("`items-per-page`",function(){beforeEach(function(){s.perpage=5,u=o('<uib-pager total-items="total" items-per-page="perpage" ng-model="currentPage"></uib-pager>')(s),s.$digest()}),it("does not change the number of pages",function(){expect(e()).toBe(2),expect(t(0).text()).toBe("« Previous"),expect(t(-1).text()).toBe("Next »")}),it("selects the last page when it is too big",function(){s.perpage=30,s.$digest(),expect(s.currentPage).toBe(2),expect(e()).toBe(2),expect(t(0)).not.toHaveClass("disabled"),expect(t(-1)).toHaveClass("disabled")})}),describe("when `page` is not a number",function(){it("handles string",function(){i("1"),expect(t(0)).toHaveClass("disabled"),i("05"),expect(t(-1)).toHaveClass("disabled")})}),describe("`num-pages`",function(){beforeEach(function(){s.numpg=null,u=o('<uib-pager total-items="total" ng-model="currentPage" num-pages="numpg"></uib-pager>')(s),s.$digest()}),it("equals to total number of pages",function(){expect(s.numpg).toBe(5)})}),describe("setting `pagerConfig`",function(){var e={};beforeEach(inject(function(t){angular.extend(e,t),t.previousText="PR",t.nextText="NE",t.align=!1,u=o('<uib-pager total-items="total" ng-model="currentPage"></uib-pager>')(s),s.$digest()})),afterEach(inject(function(t){angular.extend(t,e)})),it("should change paging text",function(){expect(t(0).text()).toBe("PR"),expect(t(-1).text()).toBe("NE")}),it("should not align previous & next page link",function(){expect(t(0)).not.toHaveClass("previous"),expect(t(-1)).not.toHaveClass("next")})}),describe("override configuration from attributes",function(){beforeEach(function(){u=o('<uib-pager align="false" previous-text="<" next-text=">" total-items="total" ng-model="currentPage"></uib-pager>')(s),s.$digest()}),it("contains 2 li elements",function(){expect(e()).toBe(2)}),it("should change paging text from attributes",function(){expect(t(0).text()).toBe("<"),expect(t(-1).text()).toBe(">")}),it("should not align previous & next page link",function(){expect(t(0)).not.toHaveClass("previous"),expect(t(-1)).not.toHaveClass("next")}),it('changes "previous" & "next" text from interpolated attributes',function(){s.previousText="<<",s.nextText=">>",u=o('<uib-pager align="false" previous-text="{{previousText}}" next-text="{{nextText}}" total-items="total" ng-model="currentPage"></uib-pager>')(s),s.$digest(),expect(t(0).text()).toBe("<<"),expect(t(-1).text()).toBe(">>")})}),it("disables the component when ng-disabled is true",function(){s.disable=!0,u=o('<uib-pager total-items="total" ng-disabled="disable" ng-model="currentPage"></uib-pager>')(s),s.$digest(),i(2),expect(t(0)).toHaveClass("disabled"),expect(t(-1)).toHaveClass("disabled"),s.disable=!1,s.$digest(),expect(t(0)).not.toHaveClass("disabled"),expect(t(-1)).not.toHaveClass("disabled"),s.disable=!0,s.$digest(),expect(t(0)).toHaveClass("disabled"),expect(t(-1)).toHaveClass("disabled")})});