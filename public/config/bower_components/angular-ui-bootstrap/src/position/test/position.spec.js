describe("$uibPosition service",function(){var t,e,o=function(t,e){this.width=t,this.height=e,this.prop=function(o){return"offsetWidth"===o?t:e}};beforeEach(module("ui.bootstrap.position")),beforeEach(inject(function(o,n){t=o,e=n})),beforeEach(function(){jasmine.addMatchers({toBePositionedAt:function(t,e){return{compare:function(o,n,i){var s={pass:t.equals(o.top,n,e)&&t.equals(o.left,i,e)};return s.pass?s.message='Expected "('+o.top+", "+o.left+')" not to be positioned at ('+n+", "+i+")":s.message='Expected "('+o.top+", "+o.left+')" to be positioned at ('+n+", "+i+")",s}}}})}),describe("rawnode",function(){it("returns the raw DOM element from an angular element",function(){var t=angular.element("<div></div>"),o=e.getRawNode(t);expect(o.nodeName).toBe("DIV")}),it("returns the raw DOM element from a select element",function(){var t=angular.element('<select><option value="value">value</option></select>'),o=e.getRawNode(t);expect(o.nodeName).toBe("SELECT")})}),describe("offset",function(){it("returns getBoundingClientRect by default",function(){var o=angular.element("<div>Foo</div>");spyOn(o[0],"getBoundingClientRect").and.returnValue({width:100,height:100,top:2,left:2}),t.find("body").append(o);var n=e.offset(o);expect(n).toEqual({width:100,height:100,top:2,left:2}),o.remove()})}),describe("viewportOffset",function(){var o;beforeEach(function(){o=angular.element('<div id="outer" style="overflow: auto; width: 200px; height: 200px; padding: 25px; box-sizing: border-box;"><div id="inner" style="margin: 20px; width: 100px; height: 100px; box-sizing: border-box;"></div></div>'),t.find("body").append(o)}),afterEach(function(){o.remove()}),it("measures the offset",function(){var t=e.viewportOffset(document.getElementById("inner"));expect(t).toEqual({top:20,bottom:30,left:20,right:30})}),it("measures the offset without padding",function(){var t=document.getElementById("outer");t.style.paddingTop="0px",t.style.paddingBottom="0px",t.style.paddingLeft="0px",t.style.paddingRight="0px";var o=e.viewportOffset(document.getElementById("inner"));expect(o).toEqual({top:20,bottom:80,left:20,right:80})}),it("measures the offset with borders",function(){var t=document.getElementById("outer");t.style.width="220px",t.style.height="220px",t.style.border="10px solid black";var o=e.viewportOffset(document.getElementById("inner"));expect(o).toEqual({top:20,bottom:30,left:20,right:30})}),it("measures the offset excluding padding",function(){var t=e.viewportOffset(document.getElementById("inner"),!1,!1);expect(t).toEqual({top:45,bottom:55,left:45,right:55})}),it("measures the offset when scrolled",function(){var t=document.getElementById("inner");t.style.width="300px",t.style.height="300px";var o=document.getElementById("outer");o.scrollTop=25,o.scrollLeft=25;var n=e.viewportOffset(document.getElementById("inner"));expect(n.top).toEqual(-5),expect(n.bottom).toBeGreaterThan(-180),expect(n.left).toEqual(-5),expect(n.right).toBeGreaterThan(-180)})}),describe("position",function(){var o;afterEach(function(){o.remove()}),it("gets position with document as the relative parent",function(){o=angular.element("<div>Foo</div>"),spyOn(o[0],"getBoundingClientRect").and.returnValue({width:100,height:100,top:2,left:2}),t.find("body").append(o);var n=e.position(o);expect(n).toEqual({width:100,height:100,top:2,left:2})}),it("gets position with an element as the relative parent",function(){o=angular.element('<div id="outer" style="position:relative;"><div id="inner">Foo</div></div>'),t.find("body").append(o);var n=angular.element(document.getElementById("outer")),i=angular.element(document.getElementById("inner"));spyOn(n[0],"getBoundingClientRect").and.returnValue({width:100,height:100,top:2,left:2}),spyOn(i[0],"getBoundingClientRect").and.returnValue({width:20,height:20,top:5,left:5});var s=e.position(i);expect(s).toEqual({width:20,height:20,top:3,left:3})})}),describe("isScrollable",function(){var o;afterEach(function(){o.remove()}),it("should return true if the element is scrollable",function(){o=angular.element('<div style="overflow: auto"></div>'),t.find("body").append(o),expect(e.isScrollable(o)).toBe(!0)}),it("should return false if the element is scrollable",function(){o=angular.element("<div></div>"),t.find("body").append(o),expect(e.isScrollable(o)).toBe(!1)})}),describe("scrollParent",function(){var o;afterEach(function(){o.remove()}),it("gets the closest scrollable ancestor",function(){o=angular.element('<div id="outer" style="overflow: auto;"><div>Foo<div id="inner">Bar</div></div></div>'),t.find("body").css({overflow:"auto"}).append(o);var n=document.getElementById("outer"),i=document.getElementById("inner"),s=e.scrollParent(i);expect(s).toEqual(n)}),it("gets the closest scrollable ancestor with overflow-x: scroll",function(){o=angular.element('<div id="outer" style="overflow-x: scroll;"><div>Foo<div id="inner">Bar</div></div></div>'),t.find("body").css({overflow:"auto"}).append(o);var n=document.getElementById("outer"),i=document.getElementById("inner"),s=e.scrollParent(i);expect(s).toEqual(n)}),it("gets the closest scrollable ancestor with overflow-y: hidden",function(){o=angular.element('<div id="outer" style="overflow-y: hidden;"><div>Foo<div id="inner">Bar</div></div></div>'),t.find("body").css({overflow:"auto"}).append(o);var n=document.getElementById("outer"),i=document.getElementById("inner"),s=e.scrollParent(i,!0);expect(s).toEqual(n)}),it("gets the document element if no scrollable ancestor exists",function(){o=angular.element('<div id="outer"><div>Foo<div id="inner">Bar</div></div></div>'),t.find("body").css({overflow:""}).append(o);var n=document.getElementById("inner"),i=e.scrollParent(n);expect(i).toEqual(t[0].documentElement)}),it("gets the closest scrollable ancestor after a positioned ancestor when positioned absolute",function(){o=angular.element('<div id="outer" style="overflow: auto; position: relative;"><div style="overflow: auto;">Foo<div id="inner" style="position: absolute;">Bar</div></div></div>'),t.find("body").css({overflow:"auto"}).append(o);var n=document.getElementById("outer"),i=document.getElementById("inner"),s=e.scrollParent(i);expect(s).toEqual(n)})}),describe("positionElements - append-to-body: false",function(){beforeEach(function(){e.position=function(){return{width:20,height:20,top:100,left:100}}}),it("should position element on top-center by default",function(){expect(e.positionElements({},new o(10,10),"other")).toBePositionedAt(90,105),expect(e.positionElements({},new o(10,10),"top")).toBePositionedAt(90,105),expect(e.positionElements({},new o(10,10),"top-center")).toBePositionedAt(90,105)}),it("should position on top-left",function(){expect(e.positionElements({},new o(10,10),"top-left")).toBePositionedAt(90,100)}),it("should position on top-right",function(){expect(e.positionElements({},new o(10,10),"top-right")).toBePositionedAt(90,110)}),it('should position elements on bottom-center when "bottom" specified',function(){expect(e.positionElements({},new o(10,10),"bottom")).toBePositionedAt(120,105),expect(e.positionElements({},new o(10,10),"bottom-center")).toBePositionedAt(120,105)}),it("should position elements on bottom-left",function(){expect(e.positionElements({},new o(10,10),"bottom-left")).toBePositionedAt(120,100)}),it("should position elements on bottom-right",function(){expect(e.positionElements({},new o(10,10),"bottom-right")).toBePositionedAt(120,110)}),it('should position elements on left-center when "left" specified',function(){expect(e.positionElements({},new o(10,10),"left")).toBePositionedAt(105,90),expect(e.positionElements({},new o(10,10),"left-center")).toBePositionedAt(105,90)}),it('should position elements on left-top when "left-top" specified',function(){expect(e.positionElements({},new o(10,10),"left-top")).toBePositionedAt(100,90)}),it('should position elements on left-bottom when "left-bottom" specified',function(){expect(e.positionElements({},new o(10,10),"left-bottom")).toBePositionedAt(110,90)}),it('should position elements on right-center when "right" specified',function(){expect(e.positionElements({},new o(10,10),"right")).toBePositionedAt(105,120),expect(e.positionElements({},new o(10,10),"right-center")).toBePositionedAt(105,120)}),it('should position elements on right-top when "right-top" specified',function(){expect(e.positionElements({},new o(10,10),"right-top")).toBePositionedAt(100,120)}),it('should position elements on right-top when "right-top" specified',function(){expect(e.positionElements({},new o(10,10),"right-bottom")).toBePositionedAt(110,120)})}),describe("positionElements - append-to-body: true",function(){beforeEach(function(){e.offset=function(){return{width:20,height:20,top:100,left:100}}}),it("should position element on top-center by default",function(){expect(e.positionElements({},new o(10,10),"other",!0)).toBePositionedAt(90,105),expect(e.positionElements({},new o(10,10),"top",!0)).toBePositionedAt(90,105),expect(e.positionElements({},new o(10,10),"top-center",!0)).toBePositionedAt(90,105)}),it("should position on top-left",function(){expect(e.positionElements({},new o(10,10),"top-left",!0)).toBePositionedAt(90,100)}),it("should position on top-right",function(){expect(e.positionElements({},new o(10,10),"top-right",!0)).toBePositionedAt(90,110)}),it('should position elements on bottom-center when "bottom" specified',function(){expect(e.positionElements({},new o(10,10),"bottom",!0)).toBePositionedAt(120,105),expect(e.positionElements({},new o(10,10),"bottom-center",!0)).toBePositionedAt(120,105)}),it("should position elements on bottom-left",function(){expect(e.positionElements({},new o(10,10),"bottom-left",!0)).toBePositionedAt(120,100)}),it("should position elements on bottom-right",function(){expect(e.positionElements({},new o(10,10),"bottom-right",!0)).toBePositionedAt(120,110)}),it('should position elements on left-center when "left" specified',function(){expect(e.positionElements({},new o(10,10),"left",!0)).toBePositionedAt(105,90),expect(e.positionElements({},new o(10,10),"left-center",!0)).toBePositionedAt(105,90)}),it('should position elements on left-top when "left-top" specified',function(){expect(e.positionElements({},new o(10,10),"left-top",!0)).toBePositionedAt(100,90)}),it('should position elements on left-bottom when "left-bottom" specified',function(){expect(e.positionElements({},new o(10,10),"left-bottom",!0)).toBePositionedAt(110,90)}),it('should position elements on right-center when "right" specified',function(){expect(e.positionElements({},new o(10,10),"right",!0)).toBePositionedAt(105,120),expect(e.positionElements({},new o(10,10),"right-center",!0)).toBePositionedAt(105,120)}),it('should position elements on right-top when "right-top" specified',function(){expect(e.positionElements({},new o(10,10),"right-top",!0)).toBePositionedAt(100,120)}),it('should position elements on right-bottom when "right-bottom" specified',function(){expect(e.positionElements({},new o(10,10),"right-bottom",!0)).toBePositionedAt(110,120)})}),describe("smart positioning",function(){var o,n;beforeEach(function(){n=angular.element("<div></div>"),t.find("body").append(n),e.position=function(){return{width:40,height:40,top:100,left:100}},o={width:10,height:10,top:10,bottom:10,left:10,right:10},e.viewportOffset=function(){return o}}),afterEach(function(){n.remove()}),it("should position element on bottom-right when top-left does not fit",function(){o.bottom=20,o.left=20,n.css({width:"60px",height:"20px"}),expect(e.positionElements({},n,"auto top-left")).toBePositionedAt(140,80)}),it("should position element on top-left when bottom-right does not fit",function(){o.top=20,o.right=20,n.css({width:"60px",height:"20px"}),expect(e.positionElements({},n,"auto bottom-right")).toBePositionedAt(80,100)}),it("should position element on right-bottom when left-top does not fit",function(){o.top=20,o.right=20,n.css({width:"20px",height:"60px"}),expect(e.positionElements({},n,"auto left-top")).toBePositionedAt(80,140)}),it("should position element on left-top when right-bottom does not fit",function(){o.bottom=20,o.left=20,n.css({width:"20px",height:"60px"}),expect(e.positionElements({},n,"auto right-bottom")).toBePositionedAt(100,80)}),it("should position element on left-top when left-center does not fit vetically",function(){o.bottom=100,n.css({width:"20px",height:"120px"}),expect(e.positionElements({},n,"auto left")).toBePositionedAt(100,80)}),it("should position element on left-bottom when left-center does not fit vertically",function(){o.top=100,n.css({width:"20px",height:"120px"}),expect(e.positionElements({},n,"auto left")).toBePositionedAt(20,80)}),it("should position element on top-left when top-center does not fit horizontally",function(){o.right=100,n.css({width:"120px",height:"20px"}),expect(e.positionElements({},n,"auto top")).toBePositionedAt(80,100)}),it("should position element on top-right when top-center does not fit horizontally",function(){o.left=100,n.css({width:"120px",height:"20px"}),expect(e.positionElements({},n,"auto top")).toBePositionedAt(80,20)})})});