describe("uib-dropdown",function(){var e,o,n,t,i,l,s,a,d;beforeEach(module("ngAnimateMock")),beforeEach(module("ui.bootstrap.dropdown")),beforeEach(inject(function(s,c,p,u,r,f,g,h){e=s,o=c,n=p,t=u,i=r,l=f,a=g,d=h})),afterEach(function(){s.remove()});var c=function(e){e=e||s,e.find("a[uib-dropdown-toggle]").click()},p=function(e,o){var n=$.Event("keydown");n.which=o,e.trigger(n)};describe("basic",function(){function e(){return o("<li uib-dropdown><a href uib-dropdown-toggle></a><ul><li><a href>Hello</a></li></ul></li>")(n)}beforeEach(function(){s=e()}),it("should toggle on `a` click",function(){expect(s).not.toHaveClass(l.openClass),c(),expect(s).toHaveClass(l.openClass),c(),expect(s).not.toHaveClass(l.openClass)}),it("should toggle when an option is clicked",function(){t.find("body").append(s),expect(s).not.toHaveClass(l.openClass),c(),expect(s).toHaveClass(l.openClass);var e=s.find("ul > li").eq(0).find("a").eq(0);e.click(),expect(s).not.toHaveClass(l.openClass)}),it("should close on document click",function(){c(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).not.toHaveClass(l.openClass)}),it("should close on escape key & focus toggle element",function(){t.find("body").append(s),c(),p(t,27),expect(s).not.toHaveClass(l.openClass),expect(s.find("a")).toHaveFocus()}),it("should not close on backspace key",function(){c(),p(t,8),expect(s).toHaveClass(l.openClass)}),it("should not close on right click",function(){c(),s.find("ul a").trigger({type:"mousedown",which:3}),expect(s).toHaveClass(l.openClass)}),it("should only allow one dropdown to be open at once",function(){var o=e(),n=e();expect(o).not.toHaveClass(l.openClass),expect(n).not.toHaveClass(l.openClass),c(o),expect(o).toHaveClass(l.openClass),expect(n).not.toHaveClass(l.openClass),c(n),expect(o).not.toHaveClass(l.openClass),expect(n).toHaveClass(l.openClass)}),it("should not toggle if the element has `disabled` class",function(){var e=o('<li uib-dropdown><a class="disabled" uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n);c(e),expect(e).not.toHaveClass(l.openClass)}),it("should not toggle if the element is disabled",function(){var e=o('<li uib-dropdown><button disabled="disabled" uib-dropdown-toggle></button><ul><li>Hello</li></ul></li>')(n);e.find("button").click(),expect(e).not.toHaveClass(l.openClass)}),it("should not toggle if the element has `ng-disabled` as true",function(){n.isdisabled=!0;var e=o('<li uib-dropdown><div ng-disabled="isdisabled" uib-dropdown-toggle></div><ul><li>Hello</li></ul></li>')(n);n.$digest(),e.find("div").click(),expect(e).not.toHaveClass(l.openClass),n.isdisabled=!1,n.$digest(),e.find("div").click(),expect(e).toHaveClass(l.openClass)}),it("should unbind events on scope destroy",function(){var e=n.$new(),t=o('<li uib-dropdown><button ng-disabled="isdisabled" uib-dropdown-toggle></button><ul><li>Hello</li></ul></li>')(e);e.$digest();var i=t.find("button");i.click(),expect(t).toHaveClass(l.openClass),i.click(),expect(t).not.toHaveClass(l.openClass),e.$destroy(),i.click(),expect(t).not.toHaveClass(l.openClass)}),it("executes other document click events normally",function(){var e=o('<input type="checkbox" ng-click="clicked = true" />')(n);n.$digest(),expect(s).not.toHaveClass(l.openClass),expect(n.clicked).toBeFalsy(),c(),expect(s).toHaveClass(l.openClass),expect(n.clicked).toBeFalsy(),e.click(),expect(n.clicked).toBeTruthy()}),it("should aria markup to the `dropdown-toggle`",function(){var e=s.find("a");expect(e.attr("aria-haspopup")).toBe("true"),expect(e.attr("aria-expanded")).toBe("false"),c(),expect(e.attr("aria-expanded")).toBe("true"),c(),expect(e.attr("aria-expanded")).toBe("false")}),it("should not raise $digest:inprog if dismissed during a digest cycle",function(){c(),expect(s).toHaveClass(l.openClass),n.$apply(function(){t.click()}),expect(s).not.toHaveClass(l.openClass)})}),describe("using dropdownMenuTemplate",function(){function e(){return i.put("custom.html",'<ul class="uib-dropdown-menu"><li>Item 1</li></ul>'),o('<li uib-dropdown><a href uib-dropdown-toggle></a><ul uib-dropdown-menu template-url="custom.html"></ul></li>')(n)}beforeEach(function(){s=e()}),it("should apply custom template for dropdown menu",function(){s.find("a").click(),expect(s.find("ul.uib-dropdown-menu").eq(0).find("li").eq(0).text()).toEqual("Item 1")}),it("should clear ul when dropdown menu is closed",function(){s.find("a").click(),expect(s.find("ul.uib-dropdown-menu").eq(0).find("li").eq(0).text()).toEqual("Item 1"),s.find("a").click(),expect(s.find("ul.uib-dropdown-menu").eq(0).find("li").length).toEqual(0)})}),describe("using dropdown-append-to-body",function(){function e(){return o('<li uib-dropdown dropdown-append-to-body><a href uib-dropdown-toggle></a><ul uib-dropdown-menu id="dropdown-menu"><li><a href>Hello On Body</a></li></ul></li>')(n)}beforeEach(function(){s=e()}),it("adds the menu to the body",function(){expect(t.find("#dropdown-menu").parent()[0]).toBe(t.find("body")[0])}),it("removes the menu when the dropdown is removed",function(){s.remove(),n.$digest(),expect(t.find("#dropdown-menu").length).toEqual(0)})}),describe("using dropdown-append-to",function(){function e(){return o('<li uib-dropdown dropdown-append-to="appendTo"><a href uib-dropdown-toggle></a><ul class="dropdown-menu" uib-dropdown-menu id="dropdown-menu"><li><a href>Hello On Container</a></li></ul></li>')(n)}beforeEach(function(){t.find("body").append(angular.element('<div id="dropdown-container"></div>')),n.appendTo=t.find("#dropdown-container"),s=e(),t.find("body").append(s)}),afterEach(function(){t.find("#dropdown-container").remove()}),it("appends to container",function(){expect(t.find("#dropdown-menu").parent()[0].id).toBe("dropdown-container")}),it("toggles open class on container",function(){var e=t.find("#dropdown-container");expect(e).not.toHaveClass("uib-dropdown-open"),s.find("[uib-dropdown-toggle]").click(),expect(e).toHaveClass("uib-dropdown-open"),s.find("[uib-dropdown-toggle]").click(),expect(e).not.toHaveClass("uib-dropdown-open")}),it("removes the menu when the dropdown is removed",function(){s.remove(),n.$digest(),expect(t.find("#dropdown-menu").length).toEqual(0)})}),describe("using is-open",function(){describe("with uib-dropdown-toggle",function(){beforeEach(function(){n.isopen=!0,s=o('<li uib-dropdown is-open="isopen"><a href uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n),n.$digest()}),it("should be open initially",function(){expect(s).toHaveClass(l.openClass)}),it("should change `is-open` binding when toggles",function(){c(),expect(n.isopen).toBe(!1)}),it("should toggle when `is-open` changes",function(){n.isopen=!1,n.$digest(),expect(s).not.toHaveClass(l.openClass)}),it("focus toggle element when opening",function(){t.find("body").append(s),c(),n.isopen=!1,n.$digest(),expect(s.find("a")).not.toHaveFocus(),n.isopen=!0,n.$digest(),expect(s.find("a")).toHaveFocus()})}),describe("without uib-dropdown-toggle",function(){beforeEach(function(){n.isopen=!0,s=o('<li uib-dropdown is-open="isopen"><ul><li>Hello</li></ul></li>')(n),n.$digest()}),it("should be open initially",function(){expect(s).toHaveClass(l.openClass)}),it("should toggle when `is-open` changes",function(){n.isopen=!1,n.$digest(),expect(s).not.toHaveClass(l.openClass)})})}),describe("using on-toggle",function(){describe("with is-open to false",function(){beforeEach(function(){n.toggleHandler=jasmine.createSpy("toggleHandler"),n.isopen=!1,s=o('<li uib-dropdown on-toggle="toggleHandler(open)" is-open="isopen"><a uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n),n.$digest()}),it("should not have been called initially",function(){expect(n.toggleHandler).not.toHaveBeenCalled()}),it("should call it correctly when toggles",function(){n.isopen=!0,n.$digest(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!0),c(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!1)})}),describe("with is-open to true",function(){beforeEach(function(){n.toggleHandler=jasmine.createSpy("toggleHandler"),n.isopen=!0,s=o('<li uib-dropdown on-toggle="toggleHandler(open)" is-open="isopen"><a uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n),n.$digest()}),it("should not have been called initially",function(){expect(n.toggleHandler).not.toHaveBeenCalled()}),it("should call it correctly when toggles",function(){n.isopen=!1,n.$digest(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!1),n.isopen=!0,n.$digest(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!0)})}),describe("without is-open",function(){beforeEach(function(){n.toggleHandler=jasmine.createSpy("toggleHandler"),s=o('<li uib-dropdown on-toggle="toggleHandler(open)"><a uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n),n.$digest()}),it("should not have been called initially",function(){expect(n.toggleHandler).not.toHaveBeenCalled()}),it("should call it when clicked",function(){c(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!0),c(),e.flush(),n.$digest(),expect(n.toggleHandler).toHaveBeenCalledWith(!1)})})}),describe("using auto-close",function(){function e(e){return o("<li uib-dropdown "+(void 0===e?"":'auto-close="'+e+'"')+"><a href uib-dropdown-toggle></a><ul><li><a href>Hello</a></li></ul></li>")(n)}describe("always",function(){it("should close on document click if no auto-close is specified",function(){s=e(),c(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).not.toHaveClass(l.openClass)}),it("should close on document click if empty auto-close is specified",function(){s=e(""),c(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).not.toHaveClass(l.openClass)})}),describe("disabled",function(){it('auto-close="disabled"',function(){s=e("disabled"),c(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).toHaveClass(l.openClass)}),it("control with is-open",function(){n.isopen=!0,s=o('<li uib-dropdown is-open="isopen" auto-close="disabled"><a href uib-dropdown-toggle></a><ul><li>Hello</li></ul></li>')(n),n.$digest(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).toHaveClass(l.openClass),n.isopen=!1,n.$digest(),expect(s).not.toHaveClass(l.openClass)}),it("should close anyway if toggle is clicked",function(){s=e("disabled"),c(),expect(s).toHaveClass(l.openClass),c(),expect(s).not.toHaveClass(l.openClass)}),it("should close anyway if esc is pressed",function(){s=e("disabled"),t.find("body").append(s),c(),p(t,27),expect(s).not.toHaveClass(l.openClass),expect(s.find("a")).toHaveFocus()}),it("should close anyway if another dropdown is opened",function(){var o=e("disabled"),n=e();expect(o).not.toHaveClass(l.openClass),expect(n).not.toHaveClass(l.openClass),c(o),expect(o).toHaveClass(l.openClass),expect(n).not.toHaveClass(l.openClass),c(n),expect(o).not.toHaveClass(l.openClass),expect(n).toHaveClass(l.openClass)})}),describe("outsideClick",function(){it("should close only on a click outside of the dropdown menu",function(){s=e("outsideClick"),c(),expect(s).toHaveClass(l.openClass),s.find("ul li a").click(),expect(s).toHaveClass(l.openClass),t.click(),expect(s).not.toHaveClass(l.openClass)}),it("should work with dropdown-append-to-body",function(){s=o('<li uib-dropdown dropdown-append-to-body auto-close="outsideClick"><a href uib-dropdown-toggle></a><ul uib-dropdown-menu id="dropdown-menu"><li><a href>Hello On Body</a></li></ul></li>')(n),c();var e=t.find("#dropdown-menu");expect(e.parent()).toHaveClass(l.appendToOpenClass),e.find("li").eq(0).trigger("click"),expect(e.parent()).toHaveClass(l.appendToOpenClass),t.click(),expect(e.parent()).not.toHaveClass(l.appendToOpenClass)})})}),describe("using keyboard-nav",function(){function e(){return o("<li uib-dropdown keyboard-nav><a href uib-dropdown-toggle></a><ul><li><a href>Hello</a></li><li><a href>Hello Again</a></li></ul></li>")(n)}beforeEach(function(){s=e()}),it("should focus first list element when down arrow pressed",function(){t.find("body").append(s),c(),p(t,40),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(0);expect(e).toHaveFocus()}),it("should not focus first list element when down arrow pressed if closed",function(){t.find("body").append(s),p(t,40),expect(s).not.toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(0);expect(e).not.toHaveFocus()}),it("should focus second list element when down arrow pressed twice",function(){t.find("body").append(s),c(),p(t,40),p(t,40),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(1);expect(e).toHaveFocus()}),it("should not focus first list element when up arrow pressed after dropdown toggled",function(){t.find("body").append(s),c(),expect(s).toHaveClass(l.openClass),p(t,38);var e=s.find("ul").eq(0).find("a").eq(0);expect(e).not.toHaveFocus()}),it("should focus last list element when up arrow pressed after dropdown toggled",function(){t.find("body").append(s),c(),p(t,38),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(1);expect(e).toHaveFocus()}),it("should not change focus when other keys are pressed",function(){t.find("body").append(s),c(),p(t,37),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a");expect(e[0]).not.toHaveFocus(),expect(e[1]).not.toHaveFocus()}),it("should focus first list element when down arrow pressed 2x and up pressed 1x",function(){t.find("body").append(s),c(),p(t,40),p(t,40),p(t,38),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(0);expect(e).toHaveFocus()}),it("should stay focused on final list element if down pressed at list end",function(){t.find("body").append(s),c(),p(t,40),p(t,40),expect(s).toHaveClass(l.openClass);var e=s.find("ul").eq(0).find("a").eq(1);expect(e).toHaveFocus(),p(t,40),expect(e).toHaveFocus()}),it("should close if esc is pressed while focused",function(){s=e("disabled"),t.find("body").append(s),c(),p(t,40),expect(s).toHaveClass(l.openClass);var o=s.find("ul").eq(0).find("a").eq(0);expect(o).toHaveFocus(),p(t,27),expect(s).not.toHaveClass(l.openClass)}),describe("with dropdown-append-to-body",function(){function e(){return o('<li uib-dropdown dropdown-append-to-body keyboard-nav><a href uib-dropdown-toggle></a><ul uib-dropdown-menu id="dropdown-menu"><li><a href>Hello On Body</a></li><li><a href>Hello Again</a></li></ul></li>')(n)}beforeEach(function(){s=e()}),it("should focus first list element when down arrow pressed",function(){c(),p(t,40);var e=t.find("#dropdown-menu");expect(e.parent()).toHaveClass(l.appendToOpenClass);var o=t.find("ul").eq(0).find("a");expect(o).toHaveFocus()}),it("should focus second list element when down arrow pressed twice",function(){c(),p(t,40),p(t,40);var e=t.find("#dropdown-menu");expect(e.parent()).toHaveClass(l.appendToOpenClass);var o=t.find("ul"),n=(o.find("a"),t.find("ul").eq(0).find("a").eq(1));expect(n).toHaveFocus()})})})});